{
  "openapi": "3.0.3",
  "x-stoplight": {
    "id": "l2icrwax0832v"
  },
  "info": {
    "description": "FlatPeak API - WARNING Undocumented endpoints are subject to breaking changes without notice and should not be used in production environments.",
    "version": "2024-08-24",
    "title": "FlatPeak API",
    "termsOfService": "https://flatpeak.com/commercials/terms",
    "contact": {
      "name": "Technical Support",
      "email": "support@flatpeak.com",
      "url": "https://flatpeak.com/contact"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "https://flatpeak.com/commercials/terms"
    }
  },
  "tags": [
    {
      "name": "Consumption",
      "description": "Consumption operations"
    },
    {
      "name": "Customers",
      "description": "Customer operations"
    },
    {
      "name": "Devices",
      "description": "Device operations"
    },
    {
      "name": "Meters",
      "description": "Meter readings operations"
    },
    {
      "name": "Events",
      "description": "Events operations"
    },
    {
      "name": "Login",
      "description": "Bearer auth token operations"
    },
    {
      "name": "Connect",
      "description": "Connect operations"
    },
    {
      "name": "Locations",
      "description": "Location operations"
    },
    {
      "name": "Rates",
      "description": "Rates operations"
    },
    {
      "name": "Costs",
      "description": "Consumption cost calculations"
    },
    {
      "name": "Schedules",
      "description": "Consumption schedules"
    },
    {
      "name": "Tariffs",
      "description": "Tariff operations"
    },
    {
      "name": "Slots",
      "description": "Slots operations"
    }
  ],
  "paths": {
    "/login": {
      "get": {
        "summary": "Create a bearer token",
        "responses": {
          "200": {
            "$ref": "#/components/responses/AuthToken"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "operationId": "bearer-token",
        "description": "FlatPeak API uses [bearer authentication](/guides/system/authorization#what-is-bearer-authentication) (also called token authentication) to authorize access to API endpoints. To create a bearer token, use this `/login` endpoint with basic auth:\n\n  | []()            | []()                                                                   \n  | --------------- | ------------------------------ |\n  | `username`      | Your FlatPeak Account ID.      |\n  | `password`      | Any of your FlatPeak API Keys. |\n\n<Tip>Account ID and API Keys can be found on [API Keys](https://dashboard.flatpeak.com/keys/api) page of Dashboard.</Tip>",
        "security": [
          {
            "basicAuth": []
          }
        ],
        "tags": [
          "Login"
        ]
      },
      "parameters": []
    },
    "/connect/tariff/token": {
      "get": {
        "summary": "Exchange a connect token",
        "responses": {
          "200": {
            "$ref": "#/components/responses/ConnectToken"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/422"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "operationId": "exchange-connect-token",
        "description": "To start requesting your customer's tariff rates from this API, you need to exchange the `connect_token` for a `location_id`.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string",
              "example": "cot_65e0839faca22517d5d51cd5"
            },
            "in": "query",
            "name": "connect_token",
            "description": "FlatPeak Connect completion token."
          }
        ],
        "tags": [
          "Connect"
        ]
      },
      "parameters": [],
      "post": {
        "summary": "Create a connect token",
        "operationId": "create-connect-token",
        "responses": {
          "200": {
            "$ref": "#/components/responses/ConnectInitTariff"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "tags": [
          "Connect"
        ],
        "description": "In order to launch a session with Connect, you need a `connect_token`. \n\nThis single-use object securely authenticates a session between your customer-facing app and Connect’s HTTP service endpoint — without exposing your main API keys.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/ConnectInitTariff"
        }
      }
    },
    "/connect/tariff/batch": {
      "parameters": [],
      "post": {
        "summary": "Batch run connect session",
        "operationId": "run-connect-batch",
        "responses": {
          "200": {
            "$ref": "#/components/responses/ConnectToken"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "tags": [
          "Connect"
        ],
        "description": "Run Connect session in batch mode, bypassing [Connect-headless](https://docs.flatpeak.com/guides/connect-headless-tariff). Use to import customer tariffs from your systems.\n\n<Warning>Using this endpoint requires advanced knowledge of FlatPeak systems. Contact support for guidance and to enable your access.</Warning>",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/ConnectImport"
        }
      }
    },
    "/events/{id}": {
      "get": {
        "summary": "Retrieve an event",
        "tags": [
          "Events"
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Event"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "operationId": "get-event",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "description": "Retrieves the details of an event.",
        "parameters": []
      },
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "description": "unique FlatPeak event identifier",
          "schema": {
            "example": "evt_3e82b87128ad42c0a352a7305219bfa2",
            "type": "string"
          },
          "required": true
        }
      ]
    },
    "/events": {
      "get": {
        "summary": "List all events",
        "tags": [
          "Events"
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/EventList"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "operationId": "get-events",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "description": "Lists events, going back up to 90 days.\n\nEvents are returned sorted by creation date, with the most recent appearing first. If no parameters are specified in the request, all events in pages of 100 are returned.",
        "parameters": [
          {
            "$ref": "#/components/parameters/event_type"
          },
          {
            "$ref": "#/components/parameters/starting_after"
          },
          {
            "$ref": "#/components/parameters/ending_before"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "schema": {
              "type": "string",
              "example": "loc_641b90b758fb8e6293716e40"
            },
            "in": "query",
            "name": "object_id",
            "description": "Filter events by FlatPeak identifier such as a location ID."
          }
        ]
      },
      "parameters": []
    },
    "/customers": {
      "get": {
        "summary": "List all customers",
        "tags": [
          "Customers"
        ],
        "operationId": "list-customers",
        "parameters": [
          {
            "$ref": "#/components/parameters/ending_before"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/starting_after"
          },
          {
            "$ref": "#/components/parameters/reference_id"
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "description": "Returns a list of all customers. \n\nThe objects are returned sorted by creation date, with the most recent appearing first. If no parameters are specified in the request, all objects in pages of 30 are returned.",
        "responses": {
          "200": {
            "$ref": "#/components/responses/CustomerList"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "post": {
        "summary": "Create a customer",
        "tags": [
          "Customers"
        ],
        "responses": {
          "201": {
            "$ref": "#/components/responses/Customer"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "operationId": "create-customer",
        "parameters": [],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "description": "Creates new customer.\n\n<Warning>Do not create customers via this endpoint unless you are performing a bulk import from your system or have been advised by FlatPeak support. Instead, use [Connect](/guides/integration-plan), which will automatically create customers as part of its flow.</Warning>",
        "requestBody": {
          "$ref": "#/components/requestBodies/CustomerCreate"
        }
      },
      "parameters": []
    },
    "/customers/{id}": {
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "description": "FlatPeak `customer_id`.",
          "required": true,
          "schema": {
            "example": "cus_a83ec6da1e0d4917b9e9abf58d60574e",
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "Retrieve a customer",
        "tags": [
          "Customers"
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Customer"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "operationId": "get-customer",
        "description": "Retrieves the details of an existing customer.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": []
      },
      "delete": {
        "summary": "Delete a customer",
        "tags": [
          "Customers"
        ],
        "operationId": "delete-customer",
        "description": "Permanently deletes a customer.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [],
        "responses": {
          "202": {
            "$ref": "#/components/responses/202"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "patch": {
        "summary": "Update a customer",
        "operationId": "update-customer",
        "responses": {
          "202": {
            "$ref": "#/components/responses/Customer"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "tags": [
          "Customers"
        ],
        "description": "Updates the specified customer. Any parameters not provided will be left unchanged.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/CustomerUpdate"
        }
      }
    },
    "/devices": {
      "get": {
        "summary": "List all devices",
        "tags": [
          "Devices"
        ],
        "operationId": "list-devices",
        "description": "Lists all device identifiers.\n\nThe objects are returned sorted by creation date, with the most recent appearing first. If no parameters are specified in the request, all objects in pages of 30 are returned. ",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/reference_id"
          },
          {
            "$ref": "#/components/parameters/ending_before"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/starting_after"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/DeviceList"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "post": {
        "summary": "Create a device",
        "tags": [
          "Devices"
        ],
        "operationId": "create-device",
        "description": "Creates a device identifier.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [],
        "requestBody": {
          "$ref": "#/components/requestBodies/DeviceCreate"
        },
        "responses": {
          "201": {
            "$ref": "#/components/responses/Device"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "parameters": []
    },
    "/devices/{id}": {
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "description": "FlatPeak `device_id`.",
          "required": true,
          "schema": {
            "example": "dev_6563a6757360a6d6a628e839",
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "Retrieve a device",
        "responses": {
          "200": {
            "$ref": "#/components/responses/Device"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "operationId": "get-device",
        "tags": [
          "Devices"
        ],
        "description": "Retrieves the details of an existing device identifier.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": []
      },
      "delete": {
        "summary": "Delete a device",
        "tags": [
          "Devices"
        ],
        "responses": {
          "202": {
            "$ref": "#/components/responses/202"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "operationId": "delete-device",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "description": "Permanently deletes a device identifier.",
        "parameters": []
      },
      "patch": {
        "summary": "Update a device",
        "operationId": "update-device",
        "responses": {
          "200": {
            "$ref": "#/components/responses/Device"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "tags": [
          "Devices"
        ],
        "description": "Updates the specified device identifier. Any parameters that have not been provided will be left unchanged.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/DeviceUpdate"
        }
      }
    },
    "/locations": {
      "get": {
        "summary": "List locations",
        "responses": {
          "200": {
            "$ref": "#/components/responses/LocationNewList"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "operationId": "list-locations",
        "description": "<Info>Location is an identifier of a supply address.</Info>\n\nReturns list of all Locations.\n\nThe objects are returned sorted by creation date, with the most recent appearing first. If no parameters are specified in the request, all objects in pages of 30 are returned.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/reference_id"
          },
          {
            "$ref": "#/components/parameters/customer_id"
          },
          {
            "$ref": "#/components/parameters/starting_after"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/ending_before"
          }
        ],
        "tags": [
          "Locations"
        ]
      },
      "post": {
        "summary": "Create a location",
        "operationId": "create-location",
        "description": "<Info>Location is an identifier of a supply address.</Info>\n\nCreates a location.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "201": {
            "$ref": "#/components/responses/LocationNew"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/LocationCreateNew"
        },
        "parameters": [],
        "tags": [
          "Locations"
        ]
      },
      "parameters": []
    },
    "/locations/{id}": {
      "get": {
        "summary": "Retrieve a location",
        "responses": {
          "200": {
            "$ref": "#/components/responses/LocationNew"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "operationId": "get-location",
        "description": "Retrieves a location.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [],
        "tags": [
          "Locations"
        ]
      },
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "description": "FlatPeak `location_id`",
          "required": true,
          "schema": {
            "example": "loc_d47751032d2748d2bce8ec55b2006def",
            "type": "string"
          }
        }
      ],
      "delete": {
        "summary": "Delete a location",
        "operationId": "delete-location",
        "responses": {
          "202": {
            "$ref": "#/components/responses/202"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "description": "Permanently deletes a location.",
        "tags": [
          "Locations"
        ]
      },
      "patch": {
        "summary": "Update a location",
        "operationId": "update-location",
        "responses": {
          "200": {
            "$ref": "#/components/responses/LocationNew"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "description": "Updates the specified location. Any parameters that have not been specified will remain unchanged.\n\n",
        "requestBody": {
          "$ref": "#/components/requestBodies/LocationUpdateNew"
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "Locations"
        ]
      }
    },
    "/locations/{id}/status": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "id",
          "in": "path",
          "required": true,
          "description": "FlatPeak `location_id`"
        }
      ],
      "get": {
        "summary": "Retrieve a location status",
        "responses": {
          "200": {
            "$ref": "#/components/responses/LocationStatus"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "description": "Unprocessable Entity (WebDAV)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "x-stoplight": {
                        "id": "pu7xm9cx97fbu"
                      },
                      "example": "Unsupported combination of tariff elements"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "operationId": "get-location-status",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "description": "<Info>This endpoint supports Locations with up to one each of `commodity_import`, `commodity_export`, `non_commodity_import`, and `non_commodity_export` tariff elements, covering all use cases currently supported by Connect. If your implementation requires more (typically complex industrial cases), contact support@flatpeak.com for assistance.</Info>\n\nRetrieves current status of a location.",
        "tags": [
          "Locations"
        ]
      }
    },
    "/meters/interval": {
      "parameters": [],
      "put": {
        "summary": "Submit interval meter records",
        "operationId": "submit-meter-flex-reads",
        "responses": {
          "200": {
            "$ref": "#/components/responses/MeterRecords"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "description": "Accepts an array of meter records holding energy use values for each period.\n\n- If you are metering a device, submit records under `device_id`.\n- If you are metering a location (i.e. main supply address meter), submit records under `location_id`.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "Meters"
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/MeterRecordsSubmit"
        }
      }
    },
    "/meters/cumulative/epoch": {
      "parameters": [],
      "put": {
        "summary": "Submit cumulative meter records",
        "operationId": "submit-meter-register-reads",
        "responses": {
          "200": {
            "$ref": "#/components/responses/MeterRecords"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "description": "Accepts array of meter records holding energy use as cumulative values.\n\n- If you are metering a device, submit records under `device_id`.\n- If you are metering a location (i.e. main supply address meter), submit records under `location_id`.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "Meters"
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/MeterRecordsCumulativeSubmit"
        }
      }
    },
    "/meters/batch": {
      "parameters": [],
      "get": {
        "summary": "Check submission batch status",
        "operationId": "meter-batch-status",
        "responses": {
          "200": {
            "$ref": "#/components/responses/MeterRecords"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "description": "Returns processing status of meter records batch when multiple records were submitted to meters endpoints.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/batch_id"
          }
        ],
        "tags": [
          "Meters"
        ]
      }
    },
    "/tariffs/elements": {
      "get": {
        "summary": "List tariffs",
        "tags": [
          "Tariffs"
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/TariffElementsList"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "operationId": "list-tariff-elements",
        "description": "Returns list of all tariffs. Use this to read tariff objects listed in the `tariff_elements` property of the Location.\n\nThe objects are returned sorted by creation date, with the most recent appearing first. If no parameters are specified in the request, all objects in pages of 30 are returned.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "direction",
            "description": "Filter by tariff direction, supported values are IMPORT and EXPORT.",
            "schema": {
              "example": "IMPORT"
            }
          },
          {
            "schema": {
              "type": "string",
              "example": "COMMODITY"
            },
            "in": "query",
            "name": "type",
            "description": "Filter by tariff type, supported values are COMMODITY and NON_COMMODITY."
          },
          {
            "schema": {
              "type": "string",
              "example": "loc_641b90b758fb8e6293716e40"
            },
            "in": "query",
            "name": "location_id",
            "description": "Filter by FlatPeak Location ID.",
            "required": true
          }
        ]
      },
      "parameters": [],
      "post": {
        "summary": "Create a tariff",
        "operationId": "create-a-tariff-element",
        "responses": {
          "200": {
            "$ref": "#/components/responses/TariffElement"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "tags": [
          "Tariffs"
        ],
        "description": "Creates a tariff. Use this endpoint to manually create a tariff and link it to a Location. Useful when you are importing data to FlatPeak.",
        "requestBody": {
          "$ref": "#/components/requestBodies/TariffElementCreateNew"
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/tariffs/elements/{id}": {
      "get": {
        "summary": "Retrieve a tariff",
        "tags": [
          "Tariffs"
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/TariffElement"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "operationId": "retrieve-a-tariff-element",
        "description": "Retrieves the details of a specific tariff. Use this endpoint to fetch detailed information for a tariff referenced in the tariff_elements property of a Location object.\n",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": []
      },
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "id",
          "in": "path",
          "required": true,
          "description": "FlatPeak `tariff_id`."
        }
      ],
      "delete": {
        "summary": "Delete a tariff",
        "operationId": "delete-a-tariff-element",
        "responses": {
          "202": {
            "$ref": "#/components/responses/202"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "tags": [
          "Tariffs"
        ],
        "description": "Deletes a tariff. Will also automatically remove the tariff from `tariff_elements` property of the Location object it is associated with.",
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "patch": {
        "summary": "Update a tariff",
        "operationId": "update-a-tariff-element",
        "responses": {
          "200": {
            "$ref": "#/components/responses/TariffElement"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "tags": [
          "Tariffs"
        ],
        "description": "<Warning>This endpoint is currently unsupported.</Warning>\n\nUpdates an existing tariff. Enables updating a tariff without having to delete and re-create it.",
        "requestBody": {
          "$ref": "#/components/requestBodies/TariffElementUpdateNew"
        }
      }
    },
    "/tariffs/rates/{id}": {
      "get": {
        "summary": "Get raw tariff rates",
        "operationId": "get-tariff-rates",
        "description": "Returns raw tariff rates in time series format, by Location ID.",
        "parameters": [
          {
            "$ref": "#/components/parameters/start_time"
          },
          {
            "$ref": "#/components/parameters/end_time"
          },
          {
            "$ref": "#/components/parameters/include_tariff"
          },
          {
            "$ref": "#/components/parameters/include_carbon"
          },
          {
            "$ref": "#/components/parameters/direction"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/TariffRate"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/422"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "Tariffs"
        ]
      },
      "parameters": [
        {
          "schema": {
            "type": "string",
            "example": "loc_66879edb94bf861548cb7428"
          },
          "name": "id",
          "in": "path",
          "required": true,
          "description": "FlatPeak Location ID"
        }
      ]
    },
    "/tariffs/audit/{id}": {
      "get": {
        "summary": "Audit tariff rates",
        "operationId": "tariff-rates-audit",
        "description": "Returns audit of tariff rates calculation, by Location ID.\n\n<Info>Please note that this endpoint is intended for diagnostic purposes and when you need to demonstrate how tariff rates are calculated. Strict usage limits may be applied. Use [tariff-rates](/api-reference/tariffs/get-tariff-rates) for high-frequency use cases.</Info>",
        "parameters": [
          {
            "$ref": "#/components/parameters/start_time"
          },
          {
            "$ref": "#/components/parameters/end_time"
          },
          {
            "$ref": "#/components/parameters/direction"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/TariffRateAudit"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/422"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "Tariffs"
        ]
      },
      "parameters": [
        {
          "schema": {
            "type": "string",
            "example": "loc_66879edb94bf861548cb7428"
          },
          "name": "id",
          "in": "path",
          "required": true,
          "description": "FlatPeak Location ID"
        }
      ]
    },
    "/slots/time/{id}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "id",
          "in": "path",
          "required": true,
          "description": "FlatPeak Location ID"
        }
      ],
      "get": {
        "summary": "Find lowest or highest price periods by specifying required duration of time",
        "responses": {
          "200": {
            "$ref": "#/components/responses/SlotTime"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/422"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "operationId": "get-slots-time",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/start_time"
          },
          {
            "$ref": "#/components/parameters/end_time"
          },
          {
            "$ref": "#/components/parameters/direction"
          },
          {
            "$ref": "#/components/parameters/segment"
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "duration",
            "description": "Amount of time in minutes you need with lowest or highest (set segment=HIGH/LOW) tariff over requested period.",
            "required": true
          }
        ],
        "description": "For example, you can find the lowest-priced 5 hours within a given period of time. The slot may be split into multiple segments.",
        "tags": [
          "Slots"
        ]
      }
    },
    "/slots/threshold/{id}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "id",
          "in": "path",
          "required": true,
          "description": "FlatPeak Location ID"
        }
      ],
      "get": {
        "summary": "Find lowest or highest price periods by specifying acceptable price range",
        "tags": [
          "Slots"
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/SlotThreshold"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/422"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "operationId": "get-slots-threshold",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "description": "*Useful when you need to provide, say, 5 hours of charging time between 9pm and 6am when price is lowest.*",
        "parameters": [
          {
            "$ref": "#/components/parameters/start_time"
          },
          {
            "$ref": "#/components/parameters/end_time"
          },
          {
            "$ref": "#/components/parameters/direction"
          },
          {
            "$ref": "#/components/parameters/segment"
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "relative",
            "description": "Relative tariff threshold. The highest tariff is 1, and the lowest is 0.01. *Either relative or absolute must be provided*."
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "absolute",
            "description": "Absolute tariff threshold in local currency. *Either absolute or relative must be provided*. **Absolute threshold overrides relative if it was provided**."
          }
        ]
      }
    },
    "/costs/instant": {
      "parameters": [],
      "post": {
        "summary": "Instantly calculate energy cost",
        "operationId": "get-cost-instant",
        "responses": {
          "200": {
            "$ref": "#/components/responses/MeterRecord"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "422": {
            "$ref": "#/components/responses/422"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "description": "Ingests a meter record and instantly returns the import or export monetary value (cost) of energy.\n\n- If you are metering a device, submit records using `device_id` parameter.\n- If you are metering a location (i.e. main supply address meter), submit records under `location_id` parameter.\n\n<Info>Meter records that are submitted via this endpoint will be permanently stored and will be used for other cost-calculations endpoints.</Info>",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "Costs"
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/MeterRecordSubmit"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/include_tariff"
          },
          {
            "$ref": "#/components/parameters/include_carbon"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "non_persistent",
            "description": "Set to `true` to avoid storing metering records permanently. Use for simulating consumption to estimate potential energy costs."
          }
        ]
      }
    },
    "/costs/interval/{id}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "id",
          "in": "path",
          "required": true,
          "description": "FlatPeak `location_id` or `device_id`."
        }
      ],
      "post": {
        "summary": "Calculate energy cost by time interval",
        "operationId": "get-cost-by-interval",
        "responses": {
          "200": {
            "$ref": "#/components/responses/EnergyCost"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "422": {
            "$ref": "#/components/responses/422"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "description": "Returns monetary value (cost) of energy by FlatPeak `location_id` or `device_id`. Meter records must have been previously submitted to the `/meters` endpoint.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/EnergyCostByTime"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/aggregation"
          },
          {
            "$ref": "#/components/parameters/direction"
          },
          {
            "$ref": "#/components/parameters/include_tariff"
          },
          {
            "$ref": "#/components/parameters/include_carbon"
          }
        ],
        "tags": [
          "Costs"
        ]
      }
    },
    "/costs/session/{id}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "id",
          "in": "path",
          "required": true,
          "description": "FlatPeak `session_reference_id` from meter record as submitted by you via `/meters` endpoints."
        }
      ],
      "post": {
        "summary": "Calculate energy cost by session ID",
        "operationId": "get-cost-by-session",
        "responses": {
          "200": {
            "$ref": "#/components/responses/EnergyCost"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "422": {
            "$ref": "#/components/responses/422"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "description": "Returns monetary value (cost) of energy by `session_reference_id` that have been previously submitted to a /meters endpoint.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "Costs"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/direction"
          },
          {
            "$ref": "#/components/parameters/include_tariff"
          },
          {
            "$ref": "#/components/parameters/include_carbon"
          }
        ]
      }
    },
    "/schedules": {
      "parameters": [],
      "post": {
        "summary": "Create consumption or export schedule for a given duration of time, speed of transfer and amount of energy required",
        "operationId": "create-a-schedule",
        "responses": {
          "200": {
            "$ref": "#/components/responses/Schedule"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "description": "Creates an import, export or a combined import/export schedule for a set of devices at a location you specify. Optimised by capabilities of your equipment, energy cost and carbon footprint.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/ScheduleCreate"
        },
        "parameters": [],
        "tags": [
          "Schedules"
        ]
      }
    },
    "/schedules/{id}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "id",
          "in": "path",
          "required": true
        }
      ]
    }
  },
  "externalDocs": {
    "description": "Location documentation",
    "url": "https://docs.flatpeak.com"
  },
  "servers": [
    {
      "url": "https://api.flatpeak.com",
      "description": "Location"
    }
  ],
  "components": {
    "schemas": {
      "ConnectImport": {
        "type": "object",
        "x-examples": {
          "Example": {
            "session": {
              "direction": "IMPORT",
              "type": "COMMODITY",
              "customer_id": "cus_65e421d1daa4a24082b4f590",
              "customer_reference_id": "CUS0123456789",
              "location_id": "loc_641b90b758fb8e6293716e40",
              "location_reference_id": "LOC0123456789",
              "provider_id": "prv_65b78bbdd8e83b06a60e38c2"
            },
            "postal_address": {
              "address_line1": "1-3",
              "address_line2": "Strand",
              "city": "London",
              "state": "Greater London",
              "post_code": "WC2N 5EH",
              "country_code": "GB"
            },
            "tariff": {
              "type": "MARKET",
              "name": "Super Cheap Energy 2008",
              "contract": {
                "start_date": "string",
                "end_date": "string"
              },
              "data": [
                {
                  "months": [
                    "All"
                  ],
                  "days_and_hours": {
                    "days": [
                      "All"
                    ],
                    "hours": [
                      {
                        "valid_from": "string",
                        "valid_to": "string",
                        "rate": [
                          {
                            "to_kwh": 0,
                            "value": 0,
                            "surcharge_fixed": "string",
                            "surcharge_percentage": "string"
                          }
                        ]
                      }
                    ]
                  }
                }
              ]
            }
          }
        },
        "title": "ConnectImport",
        "properties": {
          "session": {
            "type": "object",
            "x-stoplight": {
              "id": "ddb1qn7657226"
            },
            "properties": {
              "direction": {
                "type": "string",
                "description": "Indicates tariff direction you want to work with. Set to `IMPORT` or `EXPORT`.",
                "example": "IMPORT"
              },
              "type": {
                "type": "string",
                "example": "COMMODITY",
                "description": "Indicates tariff type you want to work with. Set to `COMMODITY` or `NON_COMMODITY`."
              },
              "customer_id": {
                "type": "string",
                "description": "FlatPeak `customer_id`. Connect will add or update the location for the customer ID you specified.",
                "example": "cus_65e421d1daa4a24082b4f590"
              },
              "customer_reference_id": {
                "type": "string",
                "example": "CUS0123456789",
                "description": "An ID for the customer from your system. Supply when you want to create a customer with this reference."
              },
              "location_id": {
                "type": "string",
                "example": "loc_641b90b758fb8e6293716e40",
                "description": "FlatPeak `location_id`. Specify when you want to show the tariff summary to the customer. Connect will return tariff summary route objects enabling your customer to manage tariff connection for that location."
              },
              "location_reference_id": {
                "type": "string",
                "example": "LOC0123456789",
                "description": "An identifier for a location from your system. Supply when you want to create a new location in FlatPeak with this reference. You can only supply either location_id or location_reference but not both."
              },
              "disconnect": {
                "type": "boolean",
                "description": "Disconnects tariff for specified direction and type.",
                "x-stoplight": {
                  "id": "iqf6k2p3cofe0"
                }
              },
              "postal_address": {
                "$ref": "#/components/schemas/PostalAddress"
              }
            },
            "required": [
              "direction",
              "type"
            ]
          },
          "tariff": {
            "type": "object",
            "description": "Information on tariff.",
            "properties": {
              "provider_id": {
                "type": "string",
                "example": "prv_65b78bbdd8e83b06a60e38c2",
                "description": "FlatPeak Provider ID. You can get provider IDs from Dashboard > Integrations > Energy Providers. If you don's know the provider - leave blank.",
                "x-stoplight": {
                  "id": "codhit4bo4aao"
                }
              },
              "type": {
                "type": "string",
                "example": "MARKET",
                "description": "Tariff structure. Supported values are `FIXED`, `TIME_OF_DAY`, `MARKET`. When `MARKET` is specified, price region will be resolved automatically from the `postal_address`."
              },
              "name": {
                "type": "string",
                "example": "Super Cheap Energy 2008",
                "description": "Tariff name."
              },
              "contract": {
                "type": "object",
                "x-stoplight": {
                  "id": "zii6of440ry33"
                },
                "description": "Contract term.",
                "properties": {
                  "start_date": {
                    "type": "string",
                    "x-stoplight": {
                      "id": "8kp50914h592k"
                    },
                    "format": "date-time",
                    "example": "2023-06-15T00:00:00Z",
                    "description": "Contract start date."
                  },
                  "end_date": {
                    "type": "string",
                    "x-stoplight": {
                      "id": "d6c9iz5lfsxxt"
                    },
                    "format": "date-time",
                    "example": "2024-06-15T00:00:00Z",
                    "description": "Contract end date."
                  }
                }
              },
              "data": {
                "$ref": "#/components/schemas/TariffSchedule"
              }
            },
            "required": [
              "type"
            ]
          }
        }
      },
      "ConnectInitTariff": {
        "type": "object",
        "x-stoplight": {
          "id": "5zrqpzzr2yn7a"
        },
        "x-examples": {},
        "title": "ConnectInitTariff",
        "description": "Connect init session data.",
        "properties": {
          "direction": {
            "type": "string",
            "x-stoplight": {
              "id": "ajjyhwmk2ox8y"
            },
            "example": "IMPORT",
            "default": "IMPORT",
            "description": "Indicates tariff direction you want to work with. Set to `IMPORT` or `EXPORT`."
          },
          "type": {
            "type": "string",
            "x-stoplight": {
              "id": "qowd8qqn1m6ae"
            },
            "default": "COMMODITY",
            "example": "COMMODITY",
            "description": "\nIndicates tariff type you want to work with. Set to `COMMODITY` or `NON_COMMODITY`."
          },
          "callback_uri": {
            "type": "string",
            "description": "URI where you will receive callback at session end.",
            "example": "https://webhook.site/4623e56fc5c1"
          },
          "connect_web_uri": {
            "type": "string",
            "description": "Connect-web URL. Required for Connect-Web (WebView). Not required for Connect-headless.",
            "example": "http://localhost:7070"
          },
          "customer_id": {
            "type": "string",
            "description": "FlatPeak `customer_id`. Connect will add or update the location for the customer ID you specified.",
            "example": "cus_65e421d1daa4a24082b4f590"
          },
          "customer_reference_id": {
            "type": "string",
            "description": "An ID for the customer from your system. Supply when you want to create a customer with this reference.",
            "example": "CUS0123456789",
            "x-stoplight": {
              "id": "18wgwddn1nx5o"
            }
          },
          "location_id": {
            "type": "string",
            "description": "FlatPeak `location_id`. Specify when you want to show the tariff summary to the customer. Connect will return tariff summary route objects enabling your customer to manage tariff connection for that location.",
            "example": "loc_641b90b758fb8e6293716e40"
          },
          "location_reference_id": {
            "type": "string",
            "description": "An identifier for a location from your system. Use this reference when creating a new location in FlatPeak. You can only supply either location_id or location_reference but not both.",
            "example": "LOC0123456789",
            "x-stoplight": {
              "id": "fre78758p0zgb"
            }
          },
          "tariff_id": {
            "type": "string",
            "description": "FlatPeak `tariff_id`. Specify when you want the customer to update a specific tariff element. Use this parameter after receiving tariff event type webhooks, such as when tariff has expired.",
            "example": "trf_6597ef46529ab4467502af0b",
            "x-stoplight": {
              "id": "geapz777q18hm"
            }
          },
          "postal_address": {
            "$ref": "#/components/schemas/PostalAddress"
          }
        },
        "required": [
          "callback_uri"
        ]
      },
      "AuthToken": {
        "type": "object",
        "x-examples": {},
        "properties": {
          "bearer_token": {
            "type": "string",
            "description": "The bearer security token.",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhY2NvdW50X2lkIjoiYWNjXzQwODQzYzgwNThlMzRiM2E5OGZkMGY1Yjc1MmE2OTFiIiwibGl2ZV9tb2RlIjpmYWxzZSwiaXNzIjoiRmxhdFBlYWtBUEkiLCJzdWIiOiJhY2NfNDA4NDNjODA1OGUzNGIzYTk4ZmQwZjViNzUyYTY5MWIiLCJleHAiOjE2NjYwOTg4NjgsIm5iZiI6MTY2NjAxMjQ2OCwiaWF0IjoxNjY2MDEyNDY4fQ.GVfkaouHm4nBoj5gSaAaEBaoS9tPNhALgrMu0-TIrWQ"
          },
          "expires_in": {
            "type": "integer",
            "description": "Expiration time in seconds.",
            "example": 3600
          },
          "live_mode": {
            "type": "boolean",
            "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
            "example": true,
            "x-stoplight": {
              "id": "3ksj2ou6nmtwg"
            }
          }
        },
        "required": [
          "bearer_token",
          "expires_in",
          "live_mode"
        ]
      },
      "Customer": {
        "type": "object",
        "x-examples": {},
        "title": "Customer",
        "description": "This object represents a customer of your business.",
        "x-tags": [
          "Customers"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "FlatPeak unique object Id.",
            "example": "cus_65e421d1daa4a24082b4f590"
          },
          "object": {
            "type": "string",
            "description": "Represents the object’s type.",
            "example": "customer"
          },
          "live_mode": {
            "type": "boolean",
            "description": "Has the value true if the object exists in live mode or the value false if the object exists in test mode."
          },
          "reference_id": {
            "type": "string",
            "description": "A reference that is meaningful to you, for example, an ID from your system.",
            "example": "CUS1234567890"
          },
          "locations": {
            "type": "array",
            "description": "An array of FlatPeak location IDs that are associated with this object.",
            "items": {
              "type": "string",
              "example": "loc_641b90b758fb8e6293716e40"
            }
          },
          "time_created": {
            "type": "string",
            "description": "Time when the object was created, in UTC.",
            "example": "2021-05-05T05:37:27Z"
          },
          "account_id": {
            "type": "string",
            "description": "FlatPeak unique account id",
            "example": "acc_65e421bed29d88d9012e0662"
          }
        },
        "required": [
          "id",
          "object",
          "live_mode",
          "time_created",
          "account_id"
        ]
      },
      "Device": {
        "type": "object",
        "x-examples": {},
        "description": "This object represents a device or another asset of a compatible type.",
        "title": "Device",
        "x-tags": [
          "Devices"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "FlatPeak unique object `id`.",
            "example": "dev_63a6087272941ef077a8fd3e",
            "readOnly": true
          },
          "object": {
            "type": "string",
            "description": "Represents the object’s type.",
            "example": "device",
            "readOnly": true
          },
          "live_mode": {
            "type": "boolean",
            "x-stoplight": {
              "id": "49pa8oln5zly4"
            },
            "description": "Has the value true if the object exists in live mode or the value false if the object exists in test mode."
          },
          "reference_id": {
            "type": "string",
            "description": "A reference that is meaningful to you, for example, an ID from your system.",
            "example": "DEV1234567890",
            "x-stoplight": {
              "id": "gcnayduh1z16f"
            },
            "readOnly": true
          },
          "last_seen": {
            "type": "string",
            "description": "Timestamp of when the device has last queried the service.",
            "example": "2022-03-22T11:12:21Z",
            "format": "date-time"
          },
          "time_created": {
            "type": "string",
            "description": "Time when the object was created, in UTC.",
            "example": "2022-01-24T14:15:22Z"
          },
          "account_id": {
            "type": "string",
            "description": "FlatPeak account ID.",
            "example": "acc_661677911f2197045e6cf1b1",
            "x-stoplight": {
              "id": "gcnayduh1z16f"
            },
            "readOnly": true
          }
        },
        "required": [
          "id",
          "object",
          "live_mode",
          "reference_id",
          "time_created",
          "account_id"
        ]
      },
      "Event": {
        "type": "object",
        "x-examples": {},
        "properties": {
          "id": {
            "type": "string",
            "example": "evt_65e42b7827c0526548432b9f",
            "description": "FlatPeak unique event id."
          },
          "object": {
            "type": "string",
            "example": "event",
            "description": "Represents the object’s type, i.e. event."
          },
          "time_created": {
            "type": "string",
            "example": "2022-01-24T14:15:22Z",
            "description": "Time when the object was created, in UTC."
          },
          "type": {
            "type": "string",
            "example": "device.create",
            "description": "FlatPeak object type in the payload. For example `customer.create`."
          },
          "data": {
            "$ref": "#/components/schemas/Device"
          }
        }
      },
      "LocationNew": {
        "type": "object",
        "x-stoplight": {
          "id": "uwi9ovzib5jb4"
        },
        "x-examples": {},
        "title": "LocationNew",
        "description": "This object represents a supply address.",
        "x-tags": [
          "Locations"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "FlatPeak unique location ID",
            "example": "loc_641b90b758fb8e6293716e40"
          },
          "object": {
            "type": "string",
            "description": "Represents the object’s type. I.e. `location`.",
            "example": "location"
          },
          "reference_id": {
            "type": "string",
            "description": "A reference that is meaningful to you, for example, an ID from your system.",
            "x-stoplight": {
              "id": "uhvd1tt1iqabo"
            },
            "example": "LOC1234567890"
          },
          "customer_id": {
            "type": "string",
            "description": "FlatPeak customer ID.",
            "x-stoplight": {
              "id": "uhvd1tt1iqabo"
            },
            "example": "cus_65e421d1daa4a24082b4f590"
          },
          "live_mode": {
            "type": "boolean",
            "description": "Has the value `true` if the object exists in live mode or the value false if the object exists in test mode."
          },
          "timezone": {
            "type": "string",
            "description": "The timezone at the location, in 'tz database format'. I.e. 'Europe/Berlin'.",
            "x-stoplight": {
              "id": "aov8uxt6289sn"
            },
            "example": "Europe/London"
          },
          "currency_code": {
            "type": "string",
            "description": "Currency at the location in ISO 4217.",
            "example": "EUR",
            "x-stoplight": {
              "id": "yjl56bkyw8d0f"
            }
          },
          "postal_address": {
            "$ref": "#/components/schemas/PostalAddress"
          },
          "geo_location": {
            "$ref": "#/components/schemas/GeoLocation"
          },
          "tariff_status": {
            "type": "object",
            "x-stoplight": {
              "id": "lwkb7g1qkapai"
            },
            "description": "Health status of tariff elements.",
            "properties": {
              "commodity_import": {
                "type": "string",
                "x-stoplight": {
                  "id": "rr06lr4th2f4n"
                },
                "example": "CONNECTED",
                "description": "Status of all COMMODITY/IMPORT tariff elements."
              },
              "commodity_export": {
                "type": "string",
                "x-stoplight": {
                  "id": "ggpckds4cj8k4"
                },
                "example": "ERROR",
                "description": "Status of all COMMODITY/EXPORT tariff elements."
              },
              "non_commodity_import": {
                "type": "string",
                "x-stoplight": {
                  "id": "6aqyxvmgkg8hc"
                },
                "example": "NOT_CONNECTED",
                "description": "Status of all NON_COMMODITY/IMPORT tariff elements."
              },
              "non_commodity_export": {
                "type": "string",
                "x-stoplight": {
                  "id": "5jhzcx06kppe3"
                },
                "description": "Status of all NON_COMMODITY/EXPORT tariff elements.",
                "example": "NOT_SUPPORTED"
              },
              "local": {
                "type": "string",
                "x-stoplight": {
                  "id": "wwywg3mzpqu7e"
                },
                "description": "Status of LOCAL tariff element.",
                "example": "NOT_SUPPORTED"
              }
            }
          },
          "tariff_elements": {
            "type": "array",
            "x-stoplight": {
              "id": "xzt6lreurtp2g"
            },
            "description": "An array of tariff IDs that apply to this location. To manage tariffs for a location, use the tariffs-elements endpoint. NOTE: This field is in beta and is not currently generally supported. Check back in early September 2024.",
            "items": {
              "x-stoplight": {
                "id": "ed96ubaxsrght"
              },
              "type": "string",
              "example": "trf_66ba584eb6923d7c3b942ef6"
            }
          },
          "time_created": {
            "type": "string",
            "description": "Time when the object was created, in UTC.",
            "format": "date-time"
          },
          "account_id": {
            "type": "string",
            "x-stoplight": {
              "id": "wg4bogwpe8daf"
            },
            "example": "acc_661677911f2197045e6cf1b1",
            "description": "FlatPeak account ID."
          }
        },
        "required": [
          "id",
          "object",
          "live_mode",
          "time_created",
          "account_id"
        ]
      },
      "LocationEditNew": {
        "type": "object",
        "x-stoplight": {
          "id": "v3tayt6afmbc2"
        },
        "x-examples": {},
        "title": "LocationEditNew",
        "description": "This object represents a supply address.",
        "x-tags": [
          "Locations"
        ],
        "properties": {
          "reference_id": {
            "type": "string",
            "description": "A reference that is meaningful to you, for example, an ID from your system.",
            "x-stoplight": {
              "id": "cssx5wpbb02g5"
            },
            "example": "LOC1234567890"
          },
          "customer_id": {
            "type": "string",
            "x-stoplight": {
              "id": "il4ieofi60r3d"
            },
            "example": "cus_65e421d1daa4a24082b4f590",
            "description": "FlatPeak customer ID."
          },
          "postal_address": {
            "$ref": "#/components/schemas/PostalAddress"
          }
        }
      },
      "LocationStatus": {
        "type": "object",
        "x-examples": {
          "Example": {
            "id": "loc_641b90b758fb8e6293716e40",
            "object": "location_status",
            "reference_id": "LOC1234567890",
            "customer_id": "cus_65e421d1daa4a24082b4f590",
            "live_mode": true,
            "timezone": "Europe/London",
            "currency_code": "EUR",
            "postal_address": {
              "address_line1": "1-3",
              "address_line2": "Strand",
              "city": "London",
              "state": "Greater London",
              "post_code": "WC2N 5EH",
              "country_code": "GB"
            },
            "geo_location": {
              "lat": 50.12345,
              "lng": -1.23456
            },
            "rates": {
              "import": {
                "yesterday": [
                  {
                    "valid_from": "2022-12-28T00:00:00Z",
                    "valid_to": "2022-12-29T00:00:00Z",
                    "tariff": {
                      "rate": 4.998,
                      "confidence": 1
                    }
                  }
                ],
                "today": [
                  {
                    "valid_from": "2022-12-29T00:00:00Z",
                    "valid_to": "2022-12-30T00:00:00Z",
                    "tariff": {
                      "rate": 4.998,
                      "confidence": 1
                    }
                  }
                ],
                "tomorrow": [
                  {
                    "valid_from": "2022-12-30T00:00:00Z",
                    "valid_to": "2022-12-31T00:00:00Z",
                    "tariff": {
                      "rate": 4.998,
                      "confidence": 1
                    }
                  }
                ]
              },
              "export": null
            },
            "tariff_status": {
              "commodity_import": {
                "status": "CONNECTED",
                "connection_type": "DIRECT",
                "provider": {
                  "id": "prv_63a6087272921ef075a8fd3e",
                  "display_name": "Octopus Energy",
                  "logo_url": "https://s.flatpeak.com/83b06a60e38c2.png"
                },
                "tariff_name": "Flexible Go 2023"
              },
              "commodity_export": {
                "status": "NOT_CONNECTED",
                "connection_type": "",
                "provider": {
                  "id": "",
                  "display_name": "",
                  "logo_url": ""
                },
                "tariff_name": ""
              },
              "non_commodity_import": {
                "elements": [],
                "status": "NOT_CONNECTED"
              }
            },
            "time_created": "2023-11-07T05:31:56Z",
            "account_id": "acc_661677911f2197045e6cf1b1"
          }
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "FlatPeak unique location ID",
            "example": "loc_641b90b758fb8e6293716e40"
          },
          "object": {
            "type": "string",
            "description": "Represents the object’s type. I.e. location_status.",
            "example": "location_status"
          },
          "live_mode": {
            "type": "boolean",
            "description": "Has the value true if the object exists in live mode or the value false if the object exists in test mode.",
            "default": true
          },
          "tariff_status": {
            "type": "object",
            "description": "Tariff status object.",
            "properties": {
              "commodity_import": {
                "type": "object",
                "description": "Status of commodity import tariff.",
                "properties": {
                  "status": {
                    "type": "string",
                    "description": "Status of tariff element. Possible values are CONNECTED, NOT_CONNECTED or ERROR.",
                    "example": "CONNECTED"
                  },
                  "connection_type": {
                    "type": "string",
                    "description": "Represents tariff connection type. Set automatically by FlatPeak depending on how the tariff was created.",
                    "example": "DIRECT"
                  },
                  "provider": {
                    "type": "object",
                    "description": "Information about the provider of the tariff element.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "FlatPeak ID of the provider this tariff belongs to.",
                        "example": "prv_63a6087272921ef075a8fd3e"
                      },
                      "display_name": {
                        "type": "string",
                        "description": "Provider display name.",
                        "example": "Octopus Energy"
                      },
                      "logo_url": {
                        "type": "string",
                        "description": "Image URL for the logo of the provider.",
                        "example": "https://s.flatpeak.com/83b06a60e38c2.png"
                      }
                    }
                  },
                  "tariff": {
                    "type": "object",
                    "x-stoplight": {
                      "id": "ptd15s772g9oe"
                    },
                    "description": "Information about the tariff element.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "x-stoplight": {
                          "id": "6ycp65n614sqv"
                        },
                        "description": "Unique tariff element ID.",
                        "example": "trf_66ba584eb6923d7c3b942ef6"
                      },
                      "display_name": {
                        "type": "string",
                        "x-stoplight": {
                          "id": "pzj2ujwqgv1tk"
                        },
                        "description": "Tariff display name.",
                        "example": "Flexible Go 2023"
                      },
                      "structure_type": {
                        "type": "string",
                        "x-stoplight": {
                          "id": "6ycp65n614sqv"
                        },
                        "description": "`FIXED` - a flat rate tariff; `TIME_OF_DAY` - a tariff that varies based on specific times of day or other cyclical factors (e.g., day of the week, month, or season); `MARKET` - a tariff based on the market rate; `DYNAMIC` - a continuously changing tariff that is not directly tied to the market rate.",
                        "example": "FIXED"
                      },
                      "contract_end_date": {
                        "type": "string",
                        "x-stoplight": {
                          "id": "cnwmyn0schnjw"
                        },
                        "format": "date-time",
                        "example": "2024-01-01T00:00:00Z",
                        "description": "Indicates end date of the energy supply contract between customer and provider."
                      }
                    }
                  }
                }
              },
              "commodity_export": {
                "type": "object",
                "description": "Status of commodity export tariff.",
                "properties": {
                  "status": {
                    "type": "string",
                    "description": "Status of tariff element. Possible values are CONNECTED, NOT_CONNECTED or ERROR.",
                    "example": "CONNECTED "
                  },
                  "connection_type": {
                    "type": "string",
                    "description": "Represents tariff connection type. Set automatically by FlatPeak depending on how tariff was created.",
                    "example": "MANUAL"
                  },
                  "provider": {
                    "type": "object",
                    "description": "Information about the provider of the tariff element.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "FlatPeak ID of the provider this tariff belongs to.",
                        "example": "prv_63374fb151ea87296cd39ced"
                      },
                      "display_name": {
                        "type": "string",
                        "description": "Provider display name.",
                        "example": "E.ON Next"
                      },
                      "logo_url": {
                        "type": "string",
                        "description": "Image URL for the logo of the provider.",
                        "example": "https://s.flatpeak.com/83b06a60e38c2.png"
                      }
                    }
                  },
                  "tariff": {
                    "type": "object",
                    "x-stoplight": {
                      "id": "r4w16eoi52jcs"
                    },
                    "description": "Information about the tariff element.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "x-stoplight": {
                          "id": "o81nml3qglnm4"
                        },
                        "description": "Unique tariff element ID.",
                        "example": "trf_66ba584eb6923d7c3b942ef6"
                      },
                      "display_name": {
                        "type": "string",
                        "x-stoplight": {
                          "id": "dsyzxi2hvomvb"
                        },
                        "description": "Tariff display name.",
                        "example": "Export 2023"
                      },
                      "structure_type": {
                        "type": "string",
                        "x-stoplight": {
                          "id": "dsyzxi2hvomvb"
                        },
                        "description": "`FIXED` - a flat rate tariff; `TIME_OF_DAY` - a tariff that varies based on specific times of day or other cyclical factors (e.g., day of the week, month, or season); `MARKET` - a tariff based on the market rate; `DYNAMIC` - a continuously changing tariff that is not directly tied to the market rate.",
                        "example": "TIME_OF_DAY"
                      },
                      "contract_end_date": {
                        "type": "string",
                        "x-stoplight": {
                          "id": "is0832ne2l48u"
                        },
                        "format": "date-time",
                        "example": "2024-01-01T00:00:00Z",
                        "description": "Indicates end date of the energy supply contract between customer and provider."
                      }
                    }
                  }
                }
              },
              "non_commodity_import": {
                "type": "object",
                "description": "Status of non-commodity import tariff.",
                "properties": {
                  "status": {
                    "type": "string",
                    "example": "ERROR",
                    "description": "Status of tariff element. Possible values are CONNECTED, NOT_CONNECTED or ERROR."
                  },
                  "connection_type": {
                    "type": "string",
                    "x-stoplight": {
                      "id": "2x0p3oam2h22l"
                    },
                    "example": "DIRECT",
                    "description": "Represents tariff connection type. Set automatically by FlatPeak depending on how the tariff was created."
                  },
                  "provider": {
                    "type": "object",
                    "x-stoplight": {
                      "id": "3fy56bsm4p2qh"
                    },
                    "description": "Information about the provider of the tariff element.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "x-stoplight": {
                          "id": "9a61rlh4nv6fk"
                        },
                        "example": "prv_63a6087272921ef075a8fd3e",
                        "description": "FlatPeak ID of the provider this tariff belongs to."
                      },
                      "display_name": {
                        "type": "string",
                        "x-stoplight": {
                          "id": "xnafu72ypr1oh"
                        },
                        "example": "Octopus Energy",
                        "description": "Provider display name."
                      },
                      "logo_url": {
                        "type": "string",
                        "x-stoplight": {
                          "id": "acwl8t4qa3tv5"
                        },
                        "example": "https://s.flatpeak.com/83b06a60e38c2.png",
                        "description": "Image URL for the logo of the provider."
                      }
                    }
                  },
                  "tariff": {
                    "type": "object",
                    "x-stoplight": {
                      "id": "2vxss1yznuyup"
                    },
                    "description": "Information about the tariff element.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "x-stoplight": {
                          "id": "3jrvgu19amg91"
                        },
                        "example": "trf_6728b0e6b6e6106dd5a88f8d",
                        "description": "Unique tariff element ID."
                      },
                      "display_name": {
                        "type": "string",
                        "x-stoplight": {
                          "id": "juumjj0bc0o8g"
                        },
                        "example": "Network Fee",
                        "description": "Tariff display name."
                      },
                      "structure_type": {
                        "type": "string",
                        "x-stoplight": {
                          "id": "3jrvgu19amg91"
                        },
                        "example": "FIXED",
                        "description": "`FIXED` - a flat rate tariff; `TIME_OF_DAY` - a tariff that varies based on specific times of day or other cyclical factors (e.g., day of the week, month, or season); `MARKET` - a tariff based on the market rate; `DYNAMIC` - a continuously changing tariff that is not directly tied to the market rate."
                      },
                      "contract_end_date": {
                        "type": "string",
                        "x-stoplight": {
                          "id": "f31zco3daip0e"
                        },
                        "format": "date-time",
                        "example": "2024-01-01T00:00:00Z",
                        "description": "Indicates end date of the energy supply contract between customer and provider."
                      }
                    }
                  }
                }
              },
              "non_commodity_export": {
                "type": "object",
                "x-stoplight": {
                  "id": "oe4h5g4xbevhd"
                },
                "description": "Status of non-commodity export tariff which is disabled as there are no known cases of this tariff type.",
                "properties": {
                  "status": {
                    "type": "string",
                    "x-stoplight": {
                      "id": "w8k8ykv841e0e"
                    },
                    "example": "NOT_SUPPORTED",
                    "description": "Status of tariff element which is currently `NOT_SUPPORTED`."
                  }
                }
              },
              "local": {
                "type": "object",
                "x-stoplight": {
                  "id": "e1dzsessaszyt"
                },
                "description": "Status of local generation tariff which is in beta.",
                "properties": {
                  "status": {
                    "type": "string",
                    "x-stoplight": {
                      "id": "a3xc60w5llu4o"
                    },
                    "example": "NOT_SUPPORTED",
                    "description": "Status of tariff element which is currently `NOT_SUPPORTED`."
                  }
                }
              }
            }
          },
          "time_created": {
            "type": "string",
            "format": "date-time",
            "description": "Indicates time when this location was created.",
            "example": "2023-11-07T05:31:56Z"
          },
          "account_id": {
            "type": "string",
            "description": "FlatPeak account ID.",
            "example": "acc_661677911f2197045e6cf1b1"
          }
        },
        "required": [
          "id",
          "object",
          "live_mode",
          "time_created",
          "account_id"
        ]
      },
      "TariffElementCreateNew": {
        "type": "object",
        "x-stoplight": {
          "id": "uyoawncda9zd7"
        },
        "x-examples": {},
        "title": "TariffElementCreateNew",
        "properties": {
          "location_id": {
            "type": "string",
            "example": "loc_641b90b758fb8e6293716e40",
            "description": "FlatPeak Location ID this tariff element will be associated with.",
            "x-stoplight": {
              "id": "o03807p5y5ori"
            }
          },
          "direction": {
            "type": "string",
            "example": "IMPORT",
            "description": "Indicates direction of energy transfer this tariff applies to. Supported options are IMPORT or EXPORT"
          },
          "type": {
            "type": "string",
            "example": "COMMODITY",
            "description": "Indicates the tariff type you want to work with. Set to COMMODITY or NON_COMMODITY."
          },
          "display_name": {
            "type": "string",
            "example": "Flexible Go 2023",
            "description": "Tariff display name."
          },
          "provider_id": {
            "type": "string",
            "example": "prv_63a6087272921ef075a8fd3e",
            "description": "FlatPeak ID of the provider this tariff belongs to."
          },
          "market_rates": {
            "type": "boolean",
            "default": false,
            "x-stoplight": {
              "id": "zjq8cf7e275o3"
            },
            "description": "Indicates if this tariff is based on a market rate."
          },
          "contract_start_date": {
            "type": "string",
            "example": "2023-01-24T00:00:00Z",
            "format": "date-time",
            "description": "Indicates start date of the energy supply contract between customer and provider."
          },
          "contract_end_date": {
            "type": "string",
            "example": "2024-01-24T00:00:00Z",
            "format": "date-time",
            "description": "Indicates end date of the energy supply contract between customer and provider."
          },
          "schedule": {
            "$ref": "#/components/schemas/TariffSchedule"
          }
        },
        "required": [
          "location_id",
          "direction",
          "type",
          "contract_start_date",
          "contract_end_date"
        ]
      },
      "TariffElementNew": {
        "type": "object",
        "x-stoplight": {
          "id": "05c1f1f174a8c"
        },
        "x-examples": {},
        "title": "TariffElementNew",
        "properties": {
          "id": {
            "type": "string",
            "example": "trf_66ba584eb6923d7c3b942ef6",
            "description": "Unique tariff element ID.",
            "x-stoplight": {
              "id": "aq3ptj5uuup5p"
            }
          },
          "object": {
            "type": "string",
            "example": "tariff",
            "description": "FlatPeak object type. I.e. tariff_element.",
            "x-stoplight": {
              "id": "aq3ptj5uuup5p"
            }
          },
          "location_id": {
            "type": "string",
            "example": "loc_641b90b758fb8e6293716e40",
            "description": "FlatPeak Location ID this tariff element is associated with.",
            "x-stoplight": {
              "id": "aq3ptj5uuup5p"
            }
          },
          "live_mode": {
            "type": "boolean",
            "x-stoplight": {
              "id": "hvnc0l0ys8avm"
            },
            "description": "Has the value true if the object exists in live mode or the value false if the object exists in test mode."
          },
          "is_linked": {
            "type": "boolean",
            "default": false,
            "x-stoplight": {
              "id": "eceonpwok2531"
            },
            "description": "This indicates that the tariff is linked to an external data source and is automatically updated from this source. Such as when it's linked to your customer's provider account or to a tariff in the FlatPeak tariffs library. This value is set automatically by FlatPeak and cannot be changed."
          },
          "connection_type": {
            "type": "string",
            "example": "MANUAL",
            "x-stoplight": {
              "id": "5jcdmn22herj0"
            },
            "description": "Represents tariff connection type. Set automatically by FlatPeak depending on how the tariff was created."
          },
          "direction": {
            "type": "string",
            "example": "IMPORT",
            "description": "Indicates direction of energy transfer this tariff applies to. Supported options are IMPORT, EXPORT or LOCAL. LOCAL direction is in beta. Contact support to enable."
          },
          "type": {
            "type": "string",
            "example": "COMMODITY",
            "description": "Indicates the tariff type you want to work with. Set to COMMODITY or NON_COMMODITY."
          },
          "status": {
            "type": "string",
            "example": "CONNECTED",
            "description": "Status of tariff element. Possible values are CONNECTED or ERROR.",
            "x-stoplight": {
              "id": "gb20zzq5nxbnq"
            }
          },
          "timezone": {
            "type": "string",
            "x-stoplight": {
              "id": "m4j4uz8b4zntb"
            },
            "description": "The timezone at the location, in 'tz database format'. I.e. 'Europe/Berlin'.",
            "example": "Europe/London"
          },
          "display_name": {
            "type": "string",
            "example": "Flexible Go 2023",
            "description": "Tariff display name."
          },
          "provider_id": {
            "type": "string",
            "example": "prv_63a6087272921ef075a8fd3e",
            "description": "FlatPeak ID of the provider this tariff belongs to."
          },
          "market_rates": {
            "type": "boolean",
            "default": false,
            "x-stoplight": {
              "id": "zjq8cf7e275o3"
            },
            "description": "Indicates if this tariff is based on a market rate."
          },
          "contract_start_date": {
            "type": "string",
            "example": "2023-01-24T00:00:00Z",
            "format": "date-time",
            "description": "Indicates start date of the energy supply contract between customer and provider."
          },
          "contract_end_date": {
            "type": "string",
            "example": "2024-01-24T00:00:00Z",
            "format": "date-time",
            "description": "Indicates end date of the energy supply contract between customer and provider."
          },
          "schedule": {
            "$ref": "#/components/schemas/TariffSchedule"
          },
          "time_created": {
            "type": "string",
            "format": "date-time",
            "example": "2023-05-05T05:37:27Z",
            "description": "Indicates time when this tariff object was created."
          },
          "account_id": {
            "type": "string",
            "x-stoplight": {
              "id": "2vdbtsh2bpzcz"
            },
            "example": "acc_661677911f2197045e6cf1b1",
            "description": "FlatPeak account ID."
          }
        },
        "required": [
          "id",
          "object",
          "location_id",
          "live_mode",
          "is_linked",
          "connection_type",
          "direction",
          "type",
          "status",
          "timezone",
          "market_rates",
          "contract_start_date",
          "contract_end_date",
          "time_created",
          "account_id"
        ]
      },
      "TariffElementUpdateNew": {
        "type": "object",
        "x-stoplight": {
          "id": "k4g9c0w522ef8"
        },
        "x-examples": {},
        "title": "TariffElementUpdateNew",
        "properties": {
          "display_name": {
            "type": "string",
            "example": "Flexible Go 2023",
            "description": "Tariff display name."
          },
          "market_rates": {
            "type": "boolean",
            "default": false,
            "x-stoplight": {
              "id": "zjq8cf7e275o3"
            },
            "description": "Indicates if this tariff is based on a market rate."
          },
          "contract_start_date": {
            "type": "string",
            "example": "2023-01-24T00:00:00Z",
            "format": "date-time",
            "description": "Indicates start date of the energy supply contract between customer and provider."
          },
          "contract_end_date": {
            "type": "string",
            "example": "2024-01-24T00:00:00Z",
            "format": "date-time",
            "description": "Indicates end date of the energy supply contract between customer and provider."
          },
          "data": {
            "$ref": "#/components/schemas/TariffSchedule"
          }
        }
      },
      "TariffSchedule": {
        "type": "array",
        "x-examples": {},
        "title": "TariffSchedule",
        "description": "Tariff schedule object.",
        "items": {
          "type": "object",
          "properties": {
            "months": {
              "type": "array",
              "description": "Array of 3-letter abbreviations of month names when the tariff is valid. `All` specifies all months.",
              "items": {
                "x-stoplight": {
                  "id": "vn7di17f3ncyd"
                },
                "type": "string",
                "example": "All",
                "default": "All"
              }
            },
            "days_and_hours": {
              "type": "array",
              "description": "Array of days and hours when the tariff is valid.",
              "items": {
                "type": "object",
                "properties": {
                  "days": {
                    "type": "array",
                    "description": "Days when the schedule is valid. Options are either day numbers or `Weekday`, `Weekend` or `All`.",
                    "items": {
                      "type": "string",
                      "example": "All",
                      "default": "All"
                    }
                  },
                  "hours": {
                    "type": "array",
                    "description": "Array of hours when the schedule is valid.",
                    "items": {
                      "type": "object",
                      "properties": {
                        "valid_from": {
                          "type": "string",
                          "format": "time",
                          "description": "Hours of day from when the schedule is valid. In HH:MM:SS format.",
                          "example": "05:00:00",
                          "default": "00:00:00"
                        },
                        "valid_to": {
                          "type": "string",
                          "format": "time",
                          "description": "Hours of day when the schedule is valid. In HH:MM:SS format.",
                          "example": "23:30:00",
                          "default": "00:00:00"
                        },
                        "rate": {
                          "type": "array",
                          "description": "Tariff rate array object.",
                          "items": {
                            "type": "object",
                            "properties": {
                              "fixed": {
                                "type": "number",
                                "description": "Fixed fariff rate in *large* currency units. When `market_rates` is set to `true`, this value is ignored.",
                                "example": 23.431,
                                "x-stoplight": {
                                  "id": "289r6lrnaa83g"
                                }
                              },
                              "to_kwh": {
                                "type": "number",
                                "description": "Specifies up to what kWh tariff applies. Used for tier-based tariffs. If tariff has no tiers, leave as `null`.",
                                "example": 30.5,
                                "nullable": true
                              },
                              "surcharge_fixed": {
                                "type": "number",
                                "x-stoplight": {
                                  "id": "otfcqp1u2mk69"
                                },
                                "description": "Tariff surcharge value in *large* currency units. When `market_rates` is set to `false`, this value is ignored. Applied before `surcharge_percentage`.",
                                "example": 0.12,
                                "nullable": true
                              },
                              "surcharge_percentage": {
                                "type": "number",
                                "x-stoplight": {
                                  "id": "gnr01j84f70ju"
                                },
                                "description": "Tariff surcharge percentage in *small* units. When `market_rates` is set to `false`, this value is ignored.",
                                "example": 0.05,
                                "nullable": true
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "TariffRate": {
        "type": "object",
        "x-stoplight": {
          "id": "o22cihzirzn15"
        },
        "x-examples": {},
        "x-tags": [
          "Rates"
        ],
        "title": "TariffRate",
        "description": "This object is a container for energy rates response.",
        "properties": {
          "id": {
            "type": "string",
            "description": "FlatPeak unique object `id`.",
            "example": "rts_65e42cdd73e9f861edda35d7"
          },
          "object": {
            "type": "string",
            "description": "Represents the object's type. I.e. `tariff_rate`.",
            "example": "tariff_rate"
          },
          "live_mode": {
            "type": "boolean",
            "description": "Has the value `true` if the object exists in live mode or the value false if the object exists in test mode."
          },
          "location_id": {
            "type": "string",
            "description": "The unique FlatPeak ID of the location.",
            "x-stoplight": {
              "id": "0grw6kx1kien5"
            },
            "example": "loc_65e42ce4d3b813479b252160"
          },
          "location_timezone": {
            "type": "string",
            "description": "The timezone at the location, in 'tz database format'. I.e. 'Europe/Berlin'.",
            "x-stoplight": {
              "id": "qew0bifiwrkx7"
            },
            "example": "Europe/London"
          },
          "currency_code": {
            "type": "string",
            "description": "Currency at the location in ISO 4217.",
            "x-stoplight": {
              "id": "aomadeld01p2u"
            },
            "example": "EUR"
          },
          "direction": {
            "type": "string",
            "description": "Direction of tariff. Supported options are `IMPORT` and `EXPORT`.",
            "x-stoplight": {
              "id": "nwrbo35d5kqyt"
            },
            "example": "IMPORT"
          },
          "last_updated": {
            "type": "string",
            "description": "Time when rates were last updated. In the format of the request, e.g. UTC or time-offset.",
            "example": "2022-05-24T14:15:22Z"
          },
          "next_update": {
            "type": "string",
            "description": "Time when we recommend fetching new rates. In the format of the request, e.g. UTC or time-offset.",
            "example": "2022-05-24T23:00:00Z"
          },
          "request": {
            "type": "object",
            "description": "Your original request.",
            "x-stoplight": {
              "id": "bxgjbinmv15bk"
            },
            "required": [
              "include_tariff",
              "include_carbon",
              "direction",
              "start_time",
              "end_time"
            ],
            "properties": {
              "include_tariff": {
                "x-stoplight": {
                  "id": "nys5tckkhar61"
                },
                "type": "boolean",
                "description": "Set to true if you requested tariff data."
              },
              "include_carbon": {
                "type": "boolean",
                "x-stoplight": {
                  "id": "exoymzohqgs0x"
                },
                "description": "Set to true if you requested carbon data."
              },
              "direction": {
                "type": "string",
                "x-stoplight": {
                  "id": "zwx7cdz34ts20"
                },
                "description": "Indicates tariff direction you requested.",
                "example": "IMPORT"
              },
              "start_time": {
                "type": "string",
                "x-stoplight": {
                  "id": "ibm8lnebfgtw1"
                },
                "format": "date-time",
                "example": "2022-05-24T14:15:22Z",
                "description": "Time when the requested period starts. In the format of the request, e.g. UTC or time-offset."
              },
              "end_time": {
                "type": "string",
                "x-stoplight": {
                  "id": "zhv80ks3xzxx5"
                },
                "format": "date-time",
                "example": "2022-05-24T16:15:22Z",
                "description": "Time when the requested period ends. In the format of the request, e.g. UTC or time-offset."
              }
            }
          },
          "data": {
            "type": "array",
            "description": "Rates response data.",
            "items": {
              "type": "object",
              "x-stoplight": {
                "id": "atpz6bpok2p95"
              },
              "properties": {
                "valid_from": {
                  "type": "string",
                  "description": "Time from when information is valid, in timezone of the original request.",
                  "format": "date-time",
                  "example": "2022-12-28T01:00:00Z"
                },
                "valid_to": {
                  "type": "string",
                  "description": "Time until when information is valid, in timezone of the original request.",
                  "format": "date-time",
                  "example": "2022-12-28T02:30:00Z"
                },
                "tariff": {
                  "type": "object",
                  "description": "The tariff rates object",
                  "properties": {
                    "rate": {
                      "type": "number",
                      "description": "The rate value per kWh, in *large* currency units.",
                      "x-stoplight": {
                        "id": "wp9jjm45ig076"
                      },
                      "example": 4.998
                    },
                    "confidence": {
                      "type": "number",
                      "description": "Estimated confidence of data where '1' is 100% accurate and 0.1 is 10% accurate.",
                      "example": 1
                    }
                  }
                },
                "carbon": {
                  "type": "object",
                  "description": "Carbon intensity index",
                  "properties": {
                    "intensity": {
                      "type": "number",
                      "description": "Carbon intensity of grid in gCO2 per kWh",
                      "example": 42
                    },
                    "relative": {
                      "type": "number",
                      "description": "Relative carbon intensity grid from 0 - lowest, to 1.0 - the highest",
                      "example": 0.1
                    },
                    "confidence": {
                      "type": "number",
                      "description": "Estimated confidence of data where '1' is 100% accurate and 0.1 is 10% accurate.",
                      "example": 0.9
                    }
                  }
                }
              }
            }
          },
          "time_created": {
            "type": "string",
            "description": "Time when this response was calculated. In UTC.",
            "format": "date-time",
            "example": "2022-05-24T15:15:22Z"
          },
          "account_id": {
            "type": "string",
            "x-stoplight": {
              "id": "js64f97p2gpks"
            },
            "example": "acc_661677911f2197045e6cf1b1",
            "description": "FlatPeak account ID."
          }
        },
        "required": [
          "id",
          "object",
          "live_mode",
          "location_id",
          "location_timezone",
          "currency_code",
          "direction",
          "last_updated",
          "next_update",
          "request",
          "account_id"
        ]
      },
      "TariffRateAudit": {
        "type": "object",
        "x-examples": {},
        "title": "TariffRateAudit",
        "properties": {
          "id": {
            "type": "string",
            "description": "FlatPeak unique object ID for this response.",
            "example": "tra_65e42cdd73e9f861edda35d7"
          },
          "object": {
            "type": "string",
            "description": "Represents the object’s type. I.e. tariff rate audit.",
            "example": "tariff_rate_audit"
          },
          "live_mode": {
            "type": "boolean",
            "description": "Has the value `true` if the object exists in live mode or the value false if the object exists in test mode."
          },
          "location_id": {
            "type": "string",
            "example": "loc_65e42ce4d3b813479b252160",
            "description": "FlatPeak location ID."
          },
          "location_timezone": {
            "type": "string",
            "example": "Europe/Berlin",
            "description": "The timezone at the location, in 'tz database format'. I.e. 'Europe/Berlin'."
          },
          "currency_code": {
            "type": "string",
            "description": "Currency at the location in ISO 4217.",
            "example": "EUR"
          },
          "direction": {
            "type": "string",
            "example": "IMPORT",
            "description": "Direction of tariff. Supported options are IMPORT and EXPORT."
          },
          "request": {
            "type": "object",
            "description": "Your original request.",
            "required": [
              "direction",
              "start_time",
              "end_time"
            ],
            "properties": {
              "direction": {
                "type": "string",
                "description": "Indicates tariff direction you requested.",
                "example": "IMPORT"
              },
              "start_time": {
                "type": "string",
                "description": "Time when the requested period starts. In the format of the request, e.g. UTC or time-offset.",
                "example": "2024-05-24T14:15:22Z"
              },
              "end_time": {
                "type": "string",
                "description": "Time when the requested period ends. In the format of the request, e.g. UTC or time-offset.",
                "example": "2024-05-24T15:15:22Z"
              }
            }
          },
          "market_sources": {
            "type": "array",
            "x-stoplight": {
              "id": "f7f5odpmzvjqs"
            },
            "description": "FlatPeak ID for market rates geographical regions. FlatPeak sets this automatically using the `postal_address` property of the Location object. For more information and to resolve IDs to region names, see the market rates reference in docs.",
            "items": {
              "x-stoplight": {
                "id": "gj6ju7i500z1v"
              },
              "type": "string",
              "example": "mrs_65792b4df61b16685ebd2e78"
            }
          },
          "carbon_sources": {
            "type": "array",
            "x-stoplight": {
              "id": "f7f5odpmzvjqs"
            },
            "description": "FlatPeak ID for carbon emissions geographical regions. FlatPeak sets this automatically using the `postal_address` property of the Location object. For more information and to resolve IDs to region names, see the carbon emissions regions in docs.",
            "items": {
              "x-stoplight": {
                "id": "w9w0w4msjxkx0"
              },
              "type": "string",
              "example": "reg_64a94563544268484146f1f4"
            }
          },
          "data": {
            "type": "array",
            "description": "Response data.",
            "items": {
              "type": "object",
              "properties": {
                "valid_from": {
                  "type": "string",
                  "description": "Time from when information is valid, in the timezone of the original request.",
                  "example": "2024-12-28T01:00:00Z"
                },
                "valid_to": {
                  "type": "string",
                  "example": "2024-12-28T02:00:00Z",
                  "description": "Time until when information is valid, in the timezone of the original request."
                },
                "tariff_rate": {
                  "type": "object",
                  "description": "Tariff rate calculation breakdown.",
                  "properties": {
                    "commodity": {
                      "type": "object",
                      "description": "Commodity rate breakdown.",
                      "properties": {
                        "market": {
                          "type": "number",
                          "example": 4.998,
                          "description": "Market rate cost component."
                        },
                        "fixed": {
                          "type": "number",
                          "example": 0.124,
                          "description": "Fixed cost component."
                        },
                        "percentage": {
                          "type": "number",
                          "example": 0.11,
                          "description": "Percentage surcharge cost component."
                        },
                        "tier": {
                          "type": "number",
                          "example": 100,
                          "x-stoplight": {
                            "id": "emsa3zmmlc1g9"
                          },
                          "description": "Consumption tier cost component. Returns the start value of the applicable tier."
                        },
                        "aggregate": {
                          "type": "number",
                          "example": 17.994,
                          "description": "Aggregate (total) cost."
                        }
                      }
                    },
                    "non_commodity": {
                      "type": "object",
                      "description": "Non-commodity rate breakdown. I.e. network fee.",
                      "properties": {
                        "fixed": {
                          "type": "number",
                          "example": 7.122,
                          "description": "Fixed cost component."
                        },
                        "tier": {
                          "type": "number",
                          "description": "Consumption tier cost component. Returns start value of the applicable tier.",
                          "example": 10000,
                          "x-stoplight": {
                            "id": "qsqmwdph6l1h9"
                          }
                        }
                      }
                    },
                    "total": {
                      "type": "number",
                      "description": "Total cost.",
                      "example": 25.116
                    },
                    "confidence": {
                      "type": "number",
                      "description": "Estimated confidence of data where '1' is 100% accurate and 0.1 is 10% accurate.",
                      "example": 0.8,
                      "x-stoplight": {
                        "id": "7k16n7acop2yo"
                      }
                    }
                  }
                }
              }
            }
          },
          "time_created": {
            "type": "string",
            "example": "2024-05-24T15:15:22Z",
            "description": "Time when this response was calculated. In UTC."
          },
          "account_id": {
            "type": "string",
            "x-stoplight": {
              "id": "mm6baovhck6jk"
            },
            "example": "acc_661677911f2197045e6cf1b1",
            "description": "FlatPeak account ID."
          }
        },
        "required": [
          "id",
          "object",
          "live_mode",
          "location_id",
          "location_timezone",
          "currency_code",
          "direction",
          "request",
          "data",
          "time_created",
          "account_id"
        ]
      },
      "SlotThreshold": {
        "type": "object",
        "x-stoplight": {
          "id": "67o50ru9lhjm2"
        },
        "x-examples": {},
        "x-tags": [
          "Rates"
        ],
        "title": "SlotThreshold",
        "description": "This object is a container for tariff rate segments.",
        "properties": {
          "id": {
            "type": "string",
            "description": "FlatPeak unique object `id`.",
            "example": "slt_65e42cdd73e9f861edda35d7"
          },
          "object": {
            "type": "string",
            "description": "Represents the object's type.",
            "example": "slot_threshold"
          },
          "live_mode": {
            "type": "boolean",
            "description": "Has the value `true` if the object exists in live mode or the value false if the object exists in test mode."
          },
          "location_id": {
            "type": "string",
            "description": "The unique FlatPeak ID of the location.",
            "x-stoplight": {
              "id": "0grw6kx1kien5"
            },
            "example": "loc_65e42ce4d3b813479b252160"
          },
          "location_timezone": {
            "type": "string",
            "description": "The timezone at the location, in 'tz database format'. I.e. 'Europe/Berlin'.",
            "x-stoplight": {
              "id": "qew0bifiwrkx7"
            },
            "example": "Europe/London"
          },
          "currency_code": {
            "type": "string",
            "description": "Currency at the location in ISO 4217.",
            "x-stoplight": {
              "id": "aomadeld01p2u"
            },
            "example": "EUR"
          },
          "direction": {
            "type": "string",
            "description": "Direction of tariff. Supported options are `IMPORT` and `EXPORT`.",
            "x-stoplight": {
              "id": "nwrbo35d5kqyt"
            },
            "example": "IMPORT"
          },
          "duration": {
            "type": "number",
            "x-stoplight": {
              "id": "3ufzouj9tfdlu"
            },
            "description": "Total amount of time in minutes for all calculated slots.",
            "example": 180
          },
          "next_update": {
            "type": "string",
            "description": "Time when we recommend fetching new rates. In the format of the request, e.g. UTC or time-offset.",
            "example": "2022-05-24T23:00:00Z"
          },
          "request": {
            "type": "object",
            "x-stoplight": {
              "id": "usyyuaku0isdq"
            },
            "description": "Your original request.",
            "required": [
              "direction",
              "segment",
              "absolute",
              "relative",
              "start_time",
              "end_time"
            ],
            "properties": {
              "direction": {
                "type": "string",
                "x-stoplight": {
                  "id": "lthmqz8cvi15x"
                },
                "example": "IMPORT",
                "description": "Indicates the tariff direction you requested."
              },
              "segment": {
                "type": "string",
                "x-stoplight": {
                  "id": "klbkave2dcnbx"
                },
                "example": "HIGH",
                "description": "Indicates HIGH or LOW segment that was requested."
              },
              "absolute": {
                "type": "number",
                "x-stoplight": {
                  "id": "94hzkqraqo1w3"
                },
                "description": "Indicates absolute tariff threshold you requested.",
                "example": 4.2
              },
              "relative": {
                "type": "number",
                "x-stoplight": {
                  "id": "4n9bk1w5kxltm"
                },
                "example": 0.5,
                "description": "Indicates the relative tariff threshold you requested."
              },
              "start_time": {
                "type": "string",
                "x-stoplight": {
                  "id": "xnom9m5tlb24y"
                },
                "description": "Time when data will start. In the format of the request, e.g. UTC or time-offset.",
                "example": "2022-12-28T00:00:00Z"
              },
              "end_time": {
                "type": "string",
                "x-stoplight": {
                  "id": "oenuzcm59eqo8"
                },
                "description": "Time when data will end. In the format of the request, e.g. UTC or time-offset.",
                "example": "2022-12-28T06:00:00Z"
              }
            }
          },
          "data": {
            "type": "array",
            "description": "Rates response data.",
            "items": {
              "type": "object",
              "x-stoplight": {
                "id": "atpz6bpok2p95"
              },
              "properties": {
                "start_time": {
                  "type": "string",
                  "description": "Time when tariff period starts, in timezone of the original request.",
                  "format": "date-time",
                  "example": "2022-12-28T01:00:00Z",
                  "x-stoplight": {
                    "id": "7dnjqix6bc3po"
                  }
                },
                "end_time": {
                  "type": "string",
                  "description": "Time when tariff period ends, in timezone of the original request.",
                  "format": "date-time",
                  "example": "2022-12-28T02:30:00Z",
                  "x-stoplight": {
                    "id": "zei9yj17objar"
                  }
                },
                "tariff": {
                  "type": "object",
                  "description": "The tariff rates object",
                  "required": [
                    "rate",
                    "confidence"
                  ],
                  "properties": {
                    "rate_avg": {
                      "type": "number",
                      "description": "The rate value, in *large* currency units.",
                      "x-stoplight": {
                        "id": "wp9jjm45ig076"
                      },
                      "example": 4.998
                    },
                    "confidence": {
                      "type": "number",
                      "description": "Estimated confidence of data where '1' is 100% accurate and 0.1 is 10% accurate.",
                      "example": 1
                    }
                  }
                }
              },
              "required": [
                "start_time",
                "end_time",
                "tariff"
              ]
            }
          },
          "time_created": {
            "type": "string",
            "description": "Time when this response was calculated. In UTC.",
            "format": "date-time",
            "example": "2022-05-24T15:15:22Z"
          },
          "account_id": {
            "type": "string",
            "x-stoplight": {
              "id": "js64f97p2gpks"
            },
            "example": "acc_661677911f2197045e6cf1b1",
            "description": "FlatPeak account ID."
          }
        },
        "required": [
          "id",
          "object",
          "live_mode",
          "location_id",
          "location_timezone",
          "currency_code",
          "direction",
          "duration",
          "next_update",
          "request",
          "data",
          "time_created",
          "account_id"
        ]
      },
      "SlotTime": {
        "type": "object",
        "x-stoplight": {
          "id": "r894wd71k1f6u"
        },
        "x-examples": {},
        "x-tags": [
          "Rates"
        ],
        "title": "SlotTime",
        "description": "This object is a container for tariff slots response.",
        "properties": {
          "id": {
            "type": "string",
            "description": "FlatPeak unique object `id`.",
            "example": "sta_65e42cdd73e9f861edda35d7"
          },
          "object": {
            "type": "string",
            "description": "\nRepresents the object's type.",
            "example": "slot_time"
          },
          "live_mode": {
            "type": "boolean",
            "description": "Has the value `true` if the object exists in live mode or the value false if the object exists in test mode."
          },
          "location_id": {
            "type": "string",
            "description": "The unique FlatPeak ID of the location.",
            "x-stoplight": {
              "id": "0grw6kx1kien5"
            },
            "example": "loc_65e42ce4d3b813479b252160"
          },
          "location_timezone": {
            "type": "string",
            "description": "The timezone at the location, in 'tz database format'. I.e. 'Europe/Berlin'.",
            "x-stoplight": {
              "id": "qew0bifiwrkx7"
            },
            "example": "Europe/London"
          },
          "currency_code": {
            "type": "string",
            "description": "Currency at the location in ISO 4217.",
            "x-stoplight": {
              "id": "aomadeld01p2u"
            },
            "example": "EUR"
          },
          "direction": {
            "type": "string",
            "description": "Direction of tariff. Supported options are `IMPORT` and `EXPORT`.",
            "x-stoplight": {
              "id": "nwrbo35d5kqyt"
            },
            "example": "IMPORT"
          },
          "next_update": {
            "type": "string",
            "description": "Time when we recommend fetching new rates. In the format of the request, e.g. UTC or time-offset.",
            "example": "2023-06-18T23:00:00Z"
          },
          "request": {
            "type": "object",
            "x-stoplight": {
              "id": "ufwxiuviuite9"
            },
            "description": "Your original request.",
            "required": [
              "direction",
              "segment",
              "duration",
              "start_time",
              "end_time"
            ],
            "properties": {
              "direction": {
                "type": "string",
                "x-stoplight": {
                  "id": "j0dqv9394h193"
                },
                "description": "Indicates tariff direction you requested.",
                "example": "IMPORT"
              },
              "segment": {
                "type": "string",
                "x-stoplight": {
                  "id": "580cbvdtc49k7"
                },
                "example": "LOW",
                "description": "Indicates HIGH or LOW segment that was requested."
              },
              "duration": {
                "type": "number",
                "x-stoplight": {
                  "id": "7v6itfcq1y44r"
                },
                "example": 60,
                "description": "Indicates the amount of time in minutes that was requested."
              },
              "start_time": {
                "type": "string",
                "x-stoplight": {
                  "id": "weunc52x0el1a"
                },
                "example": "2022-05-24T14:15:22Z",
                "description": "Time when data will start. In the format of the request, e.g. UTC or time-offset."
              },
              "end_time": {
                "type": "string",
                "x-stoplight": {
                  "id": "1edb75l8i8e1y"
                },
                "description": "Time when data will end. In the format of the request, e.g. UTC or time-offset.",
                "example": "2022-05-24T16:15:22Z"
              }
            }
          },
          "data": {
            "type": "array",
            "description": "Slots response data.",
            "items": {
              "type": "object",
              "x-stoplight": {
                "id": "atpz6bpok2p95"
              },
              "properties": {
                "start_time": {
                  "type": "string",
                  "x-stoplight": {
                    "id": "zgvxy5p88qlr1"
                  },
                  "description": "Time when slot period begins, in timezone of the original request.",
                  "example": "2024-05-20T00:00:00Z"
                },
                "end_time": {
                  "type": "string",
                  "x-stoplight": {
                    "id": "qeowyba4oeg0n"
                  },
                  "description": "Time when slot period ends, in timezone of the original request.",
                  "example": "2024-05-20T05:30:00Z"
                },
                "tariff": {
                  "type": "object",
                  "x-stoplight": {
                    "id": "46fm9lyt6zgpx"
                  },
                  "description": "The tariff slots object.",
                  "required": [
                    "rate_avg",
                    "confidence"
                  ],
                  "properties": {
                    "rate_avg": {
                      "type": "number",
                      "x-stoplight": {
                        "id": "l3web5o7pqcys"
                      },
                      "description": "Average tariff rate in the slot, in large currency units.",
                      "example": 3.221
                    },
                    "confidence": {
                      "type": "number",
                      "x-stoplight": {
                        "id": "vfh0oev33t7tc"
                      },
                      "description": "Estimated confidence of data where '1' is 100% accurate and 0.1 is 10% accurate.",
                      "example": 1
                    }
                  }
                }
              },
              "required": [
                "start_time",
                "end_time",
                "tariff"
              ]
            }
          },
          "time_created": {
            "type": "string",
            "description": "Time when this response was calculated. In UTC.",
            "format": "date-time",
            "example": "2024-05-23T15:14:22Z"
          },
          "account_id": {
            "type": "string",
            "x-stoplight": {
              "id": "js64f97p2gpks"
            },
            "example": "acc_661677911f2197045e6cf1b1",
            "description": "FlatPeak account ID."
          }
        },
        "required": [
          "id",
          "object",
          "live_mode",
          "location_id",
          "location_timezone",
          "currency_code",
          "direction",
          "next_update",
          "request",
          "data",
          "time_created",
          "account_id"
        ]
      },
      "PostalAddress": {
        "title": "PostalAddress",
        "x-stoplight": {
          "id": "c08e007sm4dhc"
        },
        "type": "object",
        "description": "Information on the postal address.",
        "x-examples": {},
        "properties": {
          "address_line1": {
            "type": "string",
            "x-stoplight": {
              "id": "y3w1smzzi7doq"
            },
            "description": "Address line 1 (e.g., street, PO Box, or company name).",
            "example": "1-3"
          },
          "address_line2": {
            "type": "string",
            "x-stoplight": {
              "id": "d2a0gmwulev18"
            },
            "description": "Address line 2 (e.g., apartment, suite, unit, or building).",
            "example": "Strand"
          },
          "city": {
            "type": "string",
            "x-stoplight": {
              "id": "6vwq2lw863yc5"
            },
            "description": "City, district, suburb, town, or village.",
            "example": "London"
          },
          "state": {
            "type": "string",
            "x-stoplight": {
              "id": "yjtu3ijseco94"
            },
            "description": "State, county, province, or region.",
            "example": "Greater London"
          },
          "post_code": {
            "type": "string",
            "x-stoplight": {
              "id": "1styvjbg8556w"
            },
            "description": "ZIP or postal code.",
            "example": "WC2N 5EH"
          },
          "country_code": {
            "type": "string",
            "x-stoplight": {
              "id": "53dqxz94xzzys"
            },
            "description": "Two-letter country code in [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2).",
            "example": "GB"
          }
        }
      },
      "EnergyCostResponse": {
        "type": "object",
        "x-stoplight": {
          "id": "99p27zfb4qlf6"
        },
        "x-examples": {},
        "description": "Value of energy object",
        "properties": {
          "start_time": {
            "type": "string",
            "description": "Start of time period, in timezone of the original request.",
            "format": "date-time",
            "example": "2022-02-01T10:30:00Z"
          },
          "end_time": {
            "type": "string",
            "description": "End of time period, in timezone of the original request.",
            "format": "date-time",
            "example": "2022-02-01T11:00:00Z"
          },
          "session_reference_id": {
            "type": "string",
            "description": "`session_reference_id` from meter record as submitted by you via `/meters` endpoints. Only returned if request made by this ID.",
            "example": "SESSION1234567890",
            "x-stoplight": {
              "id": "l7adep1lntbfu"
            }
          },
          "record_reference_id": {
            "type": "string",
            "description": "`record_reference_id` from meter record as submitted by you via `/meters` endpoints. Only returned if request made by this ID.",
            "example": "MET1234567890",
            "x-stoplight": {
              "id": "esh6jcj0khg2k"
            }
          },
          "energy": {
            "type": "object",
            "x-stoplight": {
              "id": "dr4p3n0fjgp4i"
            },
            "description": "Amount of energy.",
            "required": [
              "value"
            ],
            "properties": {
              "value": {
                "type": "integer",
                "x-stoplight": {
                  "id": "znh1bc9pnkd7q"
                },
                "description": "Amount of energy in `energy_units`.",
                "example": 10284
              }
            }
          },
          "tariff": {
            "type": "object",
            "description": "Monetary cost of energy.",
            "required": [
              "value",
              "confidence"
            ],
            "properties": {
              "value": {
                "type": "number",
                "description": "Monetary value in *large* currency units.",
                "x-stoplight": {
                  "id": "aey0ddmwfhp7b"
                },
                "example": 928.372
              },
              "confidence": {
                "type": "number",
                "description": "Estimated confidence of data where '1' is 100% accurate and 0.1 is 10% accurate.",
                "example": 1
              }
            }
          },
          "carbon": {
            "type": "object",
            "x-stoplight": {
              "id": "lekznmvb5tnh5"
            },
            "description": "Carbon intensity of energy.",
            "properties": {
              "value": {
                "type": "number",
                "x-stoplight": {
                  "id": "a9puz2i6485t2"
                },
                "example": 35.24,
                "description": "Carbon emissions in `carbon_units`."
              },
              "confidence": {
                "type": "number",
                "x-stoplight": {
                  "id": "tlw22pqr67nt3"
                },
                "example": 0.8,
                "description": "Estimated confidence of data where '1' is 100% accurate and 0.1 is 10% accurate."
              }
            }
          }
        },
        "required": [
          "start_time",
          "end_time",
          "energy",
          "tariff"
        ]
      },
      "MeterRecordResponse": {
        "type": "object",
        "x-stoplight": {
          "id": "5ngy06j5ketq3"
        },
        "x-examples": {},
        "properties": {
          "id": {
            "type": "string",
            "example": "mre_65e641b570b2901d3a40199d",
            "description": "FlatPeak meter record id."
          },
          "object": {
            "type": "string",
            "description": "FlatPeak object type, i.e. `meter_record`.",
            "example": "meter_record"
          },
          "live_mode": {
            "type": "boolean",
            "x-stoplight": {
              "id": "0ftef6ayhczsc"
            },
            "description": "Has the value true if the object exists in live mode or the value false if the object exists in test mode."
          },
          "direction": {
            "type": "string",
            "x-stoplight": {
              "id": "ujr13o7jve38m"
            },
            "example": "IMPORT",
            "description": "Indicates energy direction. Possible values are `IMPORT` or `EXPORT`."
          },
          "tariff_rate": {
            "type": "string",
            "x-stoplight": {
              "id": "ujr13o7jve38m"
            },
            "example": "IMPORT",
            "description": "Indicates tariff rate direction applied. Possible values are `IMPORT`, `EXPORT` or `LOCAL`."
          },
          "currency_code": {
            "type": "string",
            "x-stoplight": {
              "id": "tl558twl7se1k"
            },
            "description": "Currency code for cost of energy measure.",
            "example": "GBP"
          },
          "energy_units": {
            "type": "string",
            "x-stoplight": {
              "id": "2b8wc37xrt1h1"
            },
            "description": "Units of energy measure.",
            "example": "WH"
          },
          "carbon_units": {
            "type": "string",
            "x-stoplight": {
              "id": "88c3a678qjgit"
            },
            "description": "Units of carbon emissions measure.",
            "example": "gCO2eq"
          },
          "request": {
            "$ref": "#/components/schemas/MeterRecordSubmitRecord"
          },
          "data": {
            "$ref": "#/components/schemas/EnergyCostResponse"
          },
          "time_created": {
            "type": "string",
            "description": "Time when this object was created. In UTC.",
            "example": "2022-02-01T10:33:00Z"
          },
          "account_id": {
            "type": "string",
            "x-stoplight": {
              "id": "lwpqgdf9z1zmv"
            },
            "description": "FlatPeak account ID.",
            "example": "acc_661677911f2197045e6cf1b1"
          }
        },
        "required": [
          "id",
          "object",
          "live_mode",
          "direction",
          "tariff_rate",
          "currency_code",
          "energy_units",
          "carbon_units",
          "request",
          "data",
          "time_created"
        ]
      },
      "MeterRecordSubmit": {
        "type": "object",
        "x-stoplight": {
          "id": "ggohkmqooylpl"
        },
        "x-examples": {},
        "title": "Metering Record Request",
        "properties": {
          "location_id": {
            "type": "string",
            "example": "loc_641b90b758fb8e6293716e40",
            "description": "FlatPeak `location_id` that you are submitting metering records for.",
            "x-stoplight": {
              "id": "2bm76gqje3md9"
            }
          },
          "device_id": {
            "type": "string",
            "example": "dev_65e6d8334c8d715963d99db3",
            "description": "FlatPeak `device_id` you are submitting metering records for. If you provided both `location_id` and `device_id`, your records will be attributed to `device_id`.",
            "x-stoplight": {
              "id": "bfmf0zbkzkerf"
            }
          },
          "session_reference_id": {
            "type": "string",
            "example": "SESSION1234567890",
            "description": "A reference for a group of metering records, for example, a charging session ID.",
            "x-stoplight": {
              "id": "5y5sztjasnwz9"
            }
          },
          "record_reference_id": {
            "type": "string",
            "example": "MET1234567890",
            "description": "A reference for this metering record, for example, meter log ID.",
            "x-stoplight": {
              "id": "84jizggwu276k"
            }
          },
          "direction": {
            "type": "string",
            "example": "IMPORT",
            "x-stoplight": {
              "id": "sa3mw8pvfzn4h"
            },
            "description": "Indicates metering direction. Set to `IMPORT` or `EXPORT`. Defaults to `IMPORT`."
          },
          "tariff_rate": {
            "type": "string",
            "example": "IMPORT",
            "x-stoplight": {
              "id": "sa3mw8pvfzn4h"
            },
            "description": "Indicates tariff direction. Set to `IMPORT`, `EXPORT` or `LOCAL`. Defaults to match the `direction` parameter."
          },
          "measurand": {
            "type": "string",
            "example": "TRANSFERRED",
            "x-stoplight": {
              "id": "g4u5bdu6vpt8g"
            },
            "description": "Possible values are `OFFERED` or `TRANSFERRED`. Currently, only `TRANSFERRED` is supported."
          },
          "units": {
            "type": "string",
            "example": "W",
            "description": "Units of measure, supported values are W, KW, WH, KWH. When W or KW units are submitted, cost will be calculated using the constant power rate over the period."
          },
          "confidence": {
            "type": "number",
            "example": 1,
            "description": "Estimated confidence of data where '1' is 100% accurate and 0.1 is 10% accurate. Defaults to '1'. *This parameter is in beta. Contact support to enable*.",
            "x-stoplight": {
              "id": "2zl60dheu7apt"
            }
          },
          "value": {
            "type": "number",
            "example": 20567,
            "description": "Amount of energy measured."
          },
          "start_time": {
            "type": "string",
            "example": "2022-02-01T10:30:00Z",
            "description": "Metering record start time. In RFC3339 format, e.g. `2023-06-15T09:00:00Z` or with time-offset, e.g. `2023-06-15T08:00:00+01:00`."
          },
          "end_time": {
            "type": "string",
            "example": "2022-02-01T11:00:00Z",
            "description": "Metering record end time. In RFC3339 format, e.g. `2023-06-15T09:00:00Z` or with time-offset, e.g. `2023-06-15T08:00:00+01:00`."
          }
        },
        "required": [
          "location_id",
          "units",
          "value",
          "start_time",
          "end_time"
        ]
      },
      "MeterRecordSubmitRecord": {
        "type": "object",
        "x-stoplight": {
          "id": "19zj1xxxfn6s1"
        },
        "x-examples": {},
        "title": "Metering Record Request",
        "properties": {
          "location_id": {
            "type": "string",
            "example": "loc_641b90b758fb8e6293716e40",
            "description": "FlatPeak `location_id` that you are submitting metering records for.",
            "x-stoplight": {
              "id": "2bm76gqje3md9"
            }
          },
          "device_id": {
            "type": "string",
            "example": "dev_65e6d8334c8d715963d99db3",
            "description": "FlatPeak `device_id` you are submitting metering records for. If you provided both `location_id` and `device_id` your records will be attributed to `device_id`.",
            "x-stoplight": {
              "id": "bfmf0zbkzkerf"
            }
          },
          "session_reference_id": {
            "type": "string",
            "example": "SESSION1234567890",
            "description": "A reference for a group of metering records, for example, a charging session ID.",
            "x-stoplight": {
              "id": "5y5sztjasnwz9"
            }
          },
          "record_reference_id": {
            "type": "string",
            "example": "MET1234567890",
            "description": "A reference for this metering record, for example, meter log ID.",
            "x-stoplight": {
              "id": "84jizggwu276k"
            }
          },
          "direction": {
            "type": "string",
            "example": "IMPORT",
            "x-stoplight": {
              "id": "sa3mw8pvfzn4h"
            },
            "description": "Indicates metering direction. Set to `IMPORT` or `EXPORT`. Defaults to `IMPORT`."
          },
          "tariff_rate": {
            "type": "string",
            "example": "IMPORT",
            "x-stoplight": {
              "id": "sa3mw8pvfzn4h"
            },
            "description": "Indicates tariff direction. Set to `IMPORT`, `EXPORT` or `LOCAL`. Defaults to match the `direction` parameter."
          },
          "measurand": {
            "type": "string",
            "example": "TRANSFERRED",
            "x-stoplight": {
              "id": "g4u5bdu6vpt8g"
            },
            "description": "Possible values are `OFFERED` or `TRANSFERRED`. Currently, only `TRANSFERRED` is supported."
          },
          "units": {
            "type": "string",
            "example": "W",
            "description": "Units of measure, supported values are W, KW, WH, KWH. When W or KW units are submitted, cost will be calculated using the constant power rate over the period."
          },
          "confidence": {
            "type": "number",
            "example": 1,
            "description": "Estimated confidence of data where '1' is 100% accurate and 0.1 is 10% accurate. Defaults to '1'. *This parameter is in beta. Contact support to enable*.",
            "x-stoplight": {
              "id": "2zl60dheu7apt"
            }
          },
          "value": {
            "type": "number",
            "example": 20567,
            "description": "Amount of energy measured."
          },
          "start_time": {
            "type": "string",
            "example": "2022-02-01T10:30:00Z",
            "description": "Metering record start time. In RFC3339 format, e.g. `2023-06-15T09:00:00Z` or with time-offset, e.g. `2023-06-15T08:00:00+01:00`."
          },
          "end_time": {
            "type": "string",
            "example": "2022-02-01T11:00:00Z",
            "description": "Metering record end time. In RFC3339 format, e.g. `2023-06-15T09:00:00Z` or with time-offset, e.g. `2023-06-15T08:00:00+01:00`."
          },
          "non_persistent": {
            "type": "boolean",
            "x-stoplight": {
              "id": "rrpodpt33echq"
            },
            "description": "When set to `true`, metering records are not stored permanently.",
            "default": false
          }
        },
        "required": [
          "location_id",
          "units",
          "value",
          "start_time",
          "end_time"
        ]
      },
      "MeterRecordCumulativeSubmit": {
        "type": "object",
        "x-stoplight": {
          "id": "yiptogotzxmlg"
        },
        "x-examples": {},
        "title": "Metering Record Cumulative Submit",
        "properties": {
          "location_id": {
            "type": "string",
            "example": "loc_641b90b758fb8e6293716e40",
            "description": "FlatPeak `location_id` that you are submitting metering records for.",
            "x-stoplight": {
              "id": "ga3e4ofa14vpk"
            }
          },
          "device_id": {
            "type": "string",
            "example": "dev_65e6d8334c8d715963d99db3",
            "description": "FlatPeak `device_id` you are submitting metering records for. If you provided both `location_id` and `device_id` your records will be attributed to `device_id`.",
            "x-stoplight": {
              "id": "8qu7xl65lfi89"
            }
          },
          "session_reference_id": {
            "type": "string",
            "example": "SESSION1234567890",
            "description": "A reference for a group of metering records, for example, a charging session ID.",
            "x-stoplight": {
              "id": "bji1eup4prz7d"
            }
          },
          "direction": {
            "type": "string",
            "example": "IMPORT",
            "x-stoplight": {
              "id": "a44yhce4gr7e2"
            },
            "description": "Indicates metering direction. Set to `IMPORT` or `EXPORT`. Defaults to `IMPORT`."
          },
          "tariff_rate": {
            "type": "string",
            "example": "IMPORT",
            "x-stoplight": {
              "id": "a44yhce4gr7e2"
            },
            "description": "Indicates tariff direction. Set to `IMPORT`, `EXPORT` or `LOCAL`. Defaults to match the `direction` parameter."
          },
          "units": {
            "type": "string",
            "example": "WH",
            "description": "Units of measure, supported values are `WH`, `KWH`."
          },
          "data": {
            "type": "array",
            "x-stoplight": {
              "id": "zrl6ormzaedjj"
            },
            "description": "Metering data array",
            "items": {
              "x-stoplight": {
                "id": "pu8p0jtadxdrq"
              },
              "type": "object",
              "properties": {
                "time": {
                  "type": "integer",
                  "x-stoplight": {
                    "id": "anwg7p15vu9co"
                  },
                  "description": "Unix timestamp when measurement has occurred.",
                  "example": 1721991392
                },
                "value": {
                  "type": "number",
                  "x-stoplight": {
                    "id": "g6opfcy4cqtvk"
                  },
                  "description": "Amount of energy measured, as cumulative register value.",
                  "example": 1553
                },
                "record_reference_id": {
                  "type": "string",
                  "x-stoplight": {
                    "id": "eysz9o47izkin"
                  },
                  "description": "A reference for this metering record, for example, meter log ID.",
                  "example": "MET1234567890"
                }
              },
              "required": [
                "time",
                "value"
              ]
            }
          }
        },
        "required": [
          "location_id",
          "units",
          "data"
        ]
      },
      "GeoLocation": {
        "title": "GeoLocation",
        "x-stoplight": {
          "id": "5g5zsf24cp9v3"
        },
        "type": "object",
        "x-examples": {},
        "description": "Latitude and longitude of the location. FlatPeak resolves this automatically using the `postal_address` that you provide. This information is used to determine market price and carbon regions.",
        "properties": {
          "lat": {
            "x-stoplight": {
              "id": "reqfsofuowtmf"
            },
            "type": "number",
            "example": 50.12345
          },
          "lng": {
            "type": "number",
            "x-stoplight": {
              "id": "za32cq461xz6a"
            },
            "example": -1.23456
          }
        }
      },
      "Schedule": {
        "title": "Schedule",
        "x-stoplight": {
          "id": "dxhhdmv2uci0h"
        },
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "sch_65ea3fb185c1541f247c251e",
            "description": "FlatPeak schedule id."
          },
          "object": {
            "type": "string",
            "example": "schedule",
            "description": "Represents the object’s type."
          },
          "live_mode": {
            "type": "boolean",
            "example": true,
            "description": "Has the value true if the object exists in live mode or the value false if the object exists in test mode.",
            "x-stoplight": {
              "id": "sazzj8q7gapwj"
            }
          },
          "location_id": {
            "type": "string",
            "example": "loc_641b90b758fb8e6293716e40",
            "description": "FlatPeak location ID where this schedule applies."
          },
          "location_timezone": {
            "type": "string",
            "example": "Europe/London",
            "description": "The timezone at the location, in 'tz database format'. I.e. 'Europe/Berlin'.",
            "x-stoplight": {
              "id": "zhic4kz3pwaul"
            }
          },
          "currency_code": {
            "type": "string",
            "example": "GBP",
            "description": "Currency code for cost of energy measure. Always returned in large currency units."
          },
          "max_power": {
            "type": "object",
            "description": "Maximum speed of power transfer for that location.",
            "x-stoplight": {
              "id": "x7rg6lrx1e2e6"
            },
            "required": [
              "units",
              "value"
            ],
            "properties": {
              "units": {
                "type": "string",
                "x-stoplight": {
                  "id": "bqelc1zmpnqgs"
                },
                "example": "W",
                "description": "Units of measure of power transfer. Supported value is `W` and `KW.`"
              },
              "value": {
                "type": "number",
                "x-stoplight": {
                  "id": "h0cky74vykf0z"
                },
                "example": 14000,
                "description": "Speed power transfer is power.units."
              }
            }
          },
          "shaving_threshold": {
            "type": "object",
            "description": "Tariff cap. Specifies up to what price you are willing to pay to buy (or, in reverse, sell) energy.",
            "x-stoplight": {
              "id": "x7rg6lrx1e2e6"
            },
            "properties": {
              "relative": {
                "type": "number",
                "x-stoplight": {
                  "id": "bqelc1zmpnqgs"
                },
                "example": 0.83,
                "description": "Relative tariff cap. Where the highest tariff over the requested period is 1 and the lowest is 0.01, provide the value up to which you are willing to buy energy. Defaults to 1."
              },
              "absolute": {
                "type": "number",
                "x-stoplight": {
                  "id": "bqelc1zmpnqgs"
                },
                "example": 0.123,
                "description": "Absolute tariff cap in local currency using *large* units. Defaults to unlimited if no value is provided. Overrides `relative` value if provided."
              }
            }
          },
          "tariff": {
            "type": "object",
            "description": "Monetary cost of energy in the schedule.",
            "x-stoplight": {
              "id": "x7rg6lrx1e2e6"
            },
            "required": [
              "value",
              "confidence"
            ],
            "properties": {
              "value": {
                "type": "number",
                "x-stoplight": {
                  "id": "h0cky74vykf0z"
                },
                "example": 928.372,
                "description": "Monetary energy cost in *large* currency units."
              },
              "confidence": {
                "type": "number",
                "x-stoplight": {
                  "id": "bqelc1zmpnqgs"
                },
                "description": "Estimated confidence of data where '1' is 100% accurate and 0.1 is 10% accurate.",
                "example": 1
              }
            }
          },
          "savings": {
            "type": "object",
            "x-stoplight": {
              "id": "x7rg6lrx1e2e6"
            },
            "description": "Savings provided by the schedule by applying (1) tariff shaving and (2) tariff-based optimisation. The shaving is applied first.",
            "required": [
              "value",
              "percentage"
            ],
            "properties": {
              "value": {
                "type": "number",
                "x-stoplight": {
                  "id": "jov5sjlwe4wbj"
                },
                "example": 0.0239,
                "description": "Amount of money, in *large* currency units saved."
              },
              "percentage": {
                "type": "number",
                "x-stoplight": {
                  "id": "0psk6zhf1rh2c"
                },
                "example": 1.34,
                "description": "Percentage of cost saved."
              }
            }
          },
          "data": {
            "type": "array",
            "description": "This object that contains device schedules.",
            "items": {
              "type": "object",
              "properties": {
                "device_id": {
                  "type": "string",
                  "example": "dev_664525107c44d88a37ca1ad7",
                  "description": "FlatPeak device ID."
                },
                "direction": {
                  "type": "string",
                  "example": "IMPORT"
                },
                "start_time": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2022-02-01T20:14:00Z",
                  "description": "Time when energy transfer can begin, in timezone of the original request."
                },
                "end_time": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2022-02-02T06:00:00Z",
                  "description": "Time when energy transfer must be completed, in timezone of the original request."
                },
                "max_power": {
                  "type": "object",
                  "description": "Requested speed of power transfer.",
                  "x-stoplight": {
                    "id": "kua0fgzag04e0"
                  },
                  "properties": {
                    "units": {
                      "type": "string",
                      "example": "W",
                      "description": "Units of measure of power transfer. Supported value is `W` and `KW.`"
                    },
                    "value": {
                      "type": "number",
                      "example": 7000,
                      "description": "Speed power transfer is power.units."
                    }
                  }
                },
                "energy": {
                  "type": "object",
                  "description": "Amount of energy required.",
                  "required": [
                    "units",
                    "value"
                  ],
                  "properties": {
                    "units": {
                      "type": "string",
                      "example": "WH",
                      "description": "Units of energy measure. Supported values are `WH` and `KWH`."
                    },
                    "value": {
                      "type": "number",
                      "x-stoplight": {
                        "id": "pqpe7b3b0o4gr"
                      },
                      "description": "Amount of energy to be transferred.",
                      "example": 34000
                    }
                  }
                },
                "tariff": {
                  "type": "object",
                  "description": "Monetary value of energy.",
                  "required": [
                    "value",
                    "confidence"
                  ],
                  "properties": {
                    "value": {
                      "type": "number",
                      "example": 928.372,
                      "description": "Monetary value in *large* currency units."
                    },
                    "confidence": {
                      "type": "number",
                      "example": 1,
                      "description": "Estimated confidence of data where '1' is 100% accurate and 0.1 is 10% accurate."
                    }
                  }
                },
                "savings": {
                  "type": "object",
                  "x-stoplight": {
                    "id": "x7rg6lrx1e2e6"
                  },
                  "description": "Savings provided by the schedule by applying (1) tariff shaving and (2) tariff-based optimisation. The shaving is applied first.",
                  "required": [
                    "value",
                    "percentage"
                  ],
                  "properties": {
                    "value": {
                      "type": "number",
                      "x-stoplight": {
                        "id": "dd2n6dnfkaf0z"
                      },
                      "example": 0.2375,
                      "description": "Amount of money, in *large* currency units saved."
                    },
                    "percentage": {
                      "type": "number",
                      "x-stoplight": {
                        "id": "8rwcpg1m35ndj"
                      },
                      "example": 0.11,
                      "description": "Percentage of cost saved."
                    }
                  }
                },
                "schedule": {
                  "type": "array",
                  "description": "Core schedule object.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "start_time": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2022-02-02T02:00:00Z",
                        "description": "Time when energy transfer must start, in timezone of the original request."
                      },
                      "end_time": {
                        "type": "string",
                        "example": "2022-02-02T04:30:00Z",
                        "format": "date-time",
                        "description": "Time when energy transfer must end, in timezone of the original request."
                      },
                      "power": {
                        "type": "object",
                        "description": "Speed of power transfer.",
                        "required": [
                          "units",
                          "value"
                        ],
                        "properties": {
                          "units": {
                            "type": "string",
                            "example": "W",
                            "description": "Units of measure of power transfer."
                          },
                          "value": {
                            "type": "number",
                            "example": 11000,
                            "description": "Speed power transfer is power.units."
                          }
                        }
                      }
                    },
                    "required": [
                      "start_time",
                      "end_time",
                      "power"
                    ]
                  }
                }
              },
              "required": [
                "device_id",
                "direction",
                "start_time",
                "end_time",
                "energy",
                "tariff",
                "savings",
                "schedule"
              ]
            }
          },
          "time_created": {
            "type": "string",
            "format": "date-time",
            "example": "2022-01-24T14:15:22Z",
            "description": "Time when this object was created, in UTC."
          },
          "account_id": {
            "type": "string",
            "x-stoplight": {
              "id": "1w3rwbg8008rk"
            },
            "example": "acc_661677911f2197045e6cf1b1",
            "description": "FlatPeak account ID."
          }
        },
        "required": [
          "id",
          "object",
          "live_mode",
          "location_id",
          "location_timezone",
          "currency_code",
          "max_power",
          "tariff",
          "savings",
          "time_created",
          "account_id"
        ]
      },
      "FailedMeterRecord": {
        "title": "FailedMeterRecord",
        "x-stoplight": {
          "id": "nsh6y5iwx5iar"
        },
        "type": "object",
        "properties": {
          "record_num": {
            "type": "integer",
            "x-stoplight": {
              "id": "vdq3wirudmcbk"
            },
            "description": "0 based position of the metering record in the meter batch.",
            "example": 1
          },
          "record_reference_id": {
            "type": "string",
            "x-stoplight": {
              "id": "qp5iderk6m8i0"
            },
            "description": "The reference for this metering record if it was provided.",
            "example": "MET1234567890"
          },
          "error": {
            "type": "string",
            "x-stoplight": {
              "id": "3vnfq6t815h55"
            },
            "description": "Error message for this metering record.",
            "example": "end_time must not be before start_time"
          }
        },
        "required": [
          "record_num",
          "error"
        ]
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "description": "Authenticate with `bearer_token` you obtained from [/login](/api-reference/login/create-a-bearer-token) endpoint."
      },
      "basicAuth": {
        "type": "http",
        "scheme": "basic",
        "description": "Pass your `account_id` as username and `secret_key` as password via basic auth."
      },
      "DeviceId": {
        "type": "http",
        "scheme": "basic",
        "description": "Use FlatPeak `device_id` as username. The password should be left blank."
      }
    },
    "parameters": {
      "starting_after": {
        "schema": {
          "type": "string"
        },
        "in": "query",
        "name": "starting_after",
        "description": "Specifies a cursor for pagination use; provider_id defines the place in the list. To retrieve the next page in the list include starting_after where ID is the last ID in the currently retrieved list."
      },
      "limit": {
        "schema": {
          "type": "integer"
        },
        "in": "query",
        "name": "limit",
        "description": "A limit on the number of objects to be returned. Can range between 1 and 100, and the default is 30."
      },
      "ending_before": {
        "schema": {
          "type": "string"
        },
        "in": "query",
        "name": "ending_before",
        "description": "Specifies a cursor for pagination use; provider_id defines the place in the list. To retrieve the previous page in the list, include ending_before, which is the first ID in the currently retrieved list."
      },
      "reference_id": {
        "name": "reference_id",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string"
        },
        "description": "A reference that is meaningful to you, for example, an ID from your system."
      },
      "customer_id": {
        "name": "customer_id",
        "in": "query",
        "schema": {
          "type": "string",
          "example": "cus_65e421d1daa4a24082b4f590"
        },
        "description": "FlatPeak `customer_id`."
      },
      "event_type": {
        "name": "event_type",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string"
        },
        "description": "Type of event."
      },
      "start_time": {
        "name": "start_time",
        "in": "query",
        "schema": {
          "type": "string",
          "example": "2023-06-15T09:00:00Z"
        },
        "description": "Time when data will start must be in RFC3339 format, e.g., `2023-06-15T09:00:00Z` or with time offset, e.g., `2023-06-15T08:00:00+01:00`. Use either Zulu time (UTC) or time offset; if time offsets differ, `end_time` takes priority."
      },
      "end_time": {
        "name": "end_time",
        "in": "query",
        "required": true,
        "schema": {
          "type": "string",
          "example": "2023-06-15T23:00:00Z"
        },
        "description": "Time when data will end, in RFC3339 format, e.g. `2023-06-15T13:00:00Z` or with time offset, e.g. `2023-06-15T12:00:00+01:00`. Use either Zulu time (UTC) or time offset; if time offsets differ, `end_time` takes priority. The maximum period between start_time and end_time for a single request is 90 days."
      },
      "include_tariff": {
        "name": "include_tariff",
        "in": "query",
        "required": false,
        "schema": {
          "type": "boolean"
        },
        "description": "Set to `true` if you want to include tariff data."
      },
      "include_carbon": {
        "name": "include_carbon",
        "in": "query",
        "required": false,
        "schema": {
          "type": "boolean"
        },
        "description": "Set to `true` if you want to include carbon intensity data."
      },
      "direction": {
        "name": "direction",
        "in": "query",
        "schema": {
          "type": "string",
          "example": "IMPORT",
          "default": "IMPORT"
        },
        "description": "Indicates direction you want to work with. Set to `IMPORT` or `EXPORT`. Defaults to `IMPORT`."
      },
      "aggregation": {
        "name": "aggregation",
        "in": "query",
        "schema": {
          "type": "string",
          "example": "MONTH"
        },
        "description": "Aggregation interval, supported values are `DAY`, `MONTH`."
      },
      "batch_id": {
        "name": "batch_id",
        "in": "query",
        "required": true,
        "schema": {
          "type": "string"
        },
        "description": "FlatPeak meter `batch_id`."
      },
      "segment": {
        "name": "segment",
        "in": "query",
        "required": true,
        "schema": {
          "type": "string",
          "example": "LOW"
        },
        "description": "Set to `HIGH` to get the most expensive rate segment and to `LOW` to get the cheapest segment."
      }
    },
    "responses": {
      "202": {
        "description": "202 accepted",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "x-examples": {
                "": {
                  "message": "Accepted"
                }
              },
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Accepted"
                }
              }
            },
            "examples": {}
          }
        }
      },
      "403": {
        "description": "403 bad credentials",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "x-examples": {
                "Example": {
                  "message": "Bad credentials"
                }
              },
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Bad credentials"
                }
              }
            },
            "examples": {}
          }
        }
      },
      "404": {
        "description": "404 response",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "x-examples": {
                "Example": {
                  "message": "Not Found"
                }
              },
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Not Found"
                }
              }
            },
            "examples": {}
          }
        }
      },
      "409": {
        "description": "409 conflict",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "x-examples": {
                "Example": {
                  "message": "Conflict"
                }
              },
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Conflict"
                }
              }
            },
            "examples": {}
          }
        }
      },
      "422": {
        "description": "412 Data not available",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "x-examples": {
                "Example": {
                  "object": "error",
                  "type": "api_error",
                  "live_mode": false,
                  "time_created": "2022-01-24T14:15:22.003",
                  "code": "country_code_missing",
                  "message": "Country code is required"
                }
              },
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Connect is processing link to tariff source."
                }
              }
            }
          }
        }
      },
      "500": {
        "description": "500 error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "x-examples": {
                "": {
                  "message": "Internal Server Error"
                }
              },
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Internal Server Error"
                }
              }
            },
            "examples": {}
          }
        }
      },
      "Event": {
        "description": "",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Event"
            }
          }
        }
      },
      "EventList": {
        "description": "",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "x-examples": {
                "": {
                  "object": "list",
                  "url": "/events",
                  "has_more": false,
                  "data": [
                    {
                      "id": "evt_b6e31325b57d4fb79917be19afeb1fc4",
                      "object": "event",
                      "api_version": "2022-05-21",
                      "time_created": 1530291411,
                      "data": {
                        "live_mode": false,
                        "object": "device",
                        "id": "dev_607c124e99c1401ca7fc3a5ca5ff9501",
                        "mac": "00-00-5e-00-53-af",
                        "account_id": "acc_c85e9f90aa18454487b50d3c1785ed4e",
                        "customer_id": "cus_3090a6232d754c9a8936272376989781",
                        "provider_id": "prv_3090a6232d754c9a8936272376989781",
                        "location_id": "loc_65bb076f362848378137f055139becb1",
                        "description": "Kitchen Fridge Freezer",
                        "time_created": "2022-01-24T14:15:22Z",
                        "last_seen": "2022-03-22T11:12:21Z",
                        "hardware_profile": {
                          "make": "Samsung",
                          "type": "Fridge",
                          "model": "SRVQ1342",
                          "wattage_in": 3000,
                          "wattage_out": 0
                        },
                        "postal_address": {
                          "address_line1": "Science and Industry Museum",
                          "address_line2": "Liverpool Road",
                          "city": "Manchester",
                          "state": "Lancashire",
                          "post_code": "M34FP",
                          "country_code": "GB"
                        },
                        "geo_location": {
                          "latitude": "-77.52907766250239",
                          "longitude": "167.1522246611749"
                        },
                        "tariff": [
                          {
                            "direction": "inbound",
                            "valid_from": "2021-05-05T00:03:00Z",
                            "valid_to": "2021-05-05T04:30:00Z",
                            "cost": {
                              "rate": 4.998,
                              "confidence": 1
                            },
                            "renewable": {
                              "share": 10,
                              "confidence": 0.9
                            },
                            "grid": {
                              "load": 2,
                              "confidence": 0.8
                            }
                          },
                          {
                            "direction": "inbound",
                            "valid_from": "2021-05-05T04:30:00Z",
                            "valid_to": "2021-05-06T00:30:00Z",
                            "cost": {
                              "rate": 15.897,
                              "confidence": 1
                            },
                            "renewable": {
                              "share": 30,
                              "confidence": 0.7
                            },
                            "grid": {
                              "load": 4,
                              "confidence": 0.6
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": "evt_784ddeffc4484e25b4a492e96f7cd1b2",
                      "object": "event",
                      "api_version": "2022-05-21",
                      "time_created": "2022-01-24T14:15:22Z",
                      "data": {
                        "live_mode": false,
                        "object": "device",
                        "id": "dev_607c124e99c1401ca7fc3a5ca5ff9501",
                        "mac": "00-00-5e-00-53-af",
                        "account_id": "acc_c85e9f90aa18454487b50d3c1785ed4e",
                        "customer_id": "cus_3090a6232d754c9a8936272376989781",
                        "provider_id": "prv_3090a6232d754c9a8936272376989781",
                        "location_id": "loc_65bb076f362848378137f055139becb1",
                        "description": "Kitchen Fridge",
                        "time_created": "2022-01-24T14:15:22Z",
                        "last_seen": "2022-03-22T11:12:21Z",
                        "hardware_profile": {
                          "make": "Samsung",
                          "type": "Fridge",
                          "model": "SRVQ1342",
                          "wattage_in": 3000,
                          "wattage_out": 0
                        },
                        "postal_address": {
                          "address_line1": "Science and Industry Museum",
                          "address_line2": "Liverpool Road",
                          "city": "Manchester",
                          "state": "Lancashire",
                          "post_code": "M34FP",
                          "country_code": "GB"
                        },
                        "geo_location": {
                          "latitude": "-77.52907766250239",
                          "longitude": "167.1522246611749"
                        },
                        "tariff": [
                          {
                            "direction": "inbound",
                            "valid_from": "2021-05-05T00:03:00Z",
                            "valid_to": "2021-05-05T04:30:00Z",
                            "cost": {
                              "rate": 4.998,
                              "confidence": 1
                            },
                            "renewable": {
                              "share": 10,
                              "confidence": 0.9
                            },
                            "grid": {
                              "load": 2,
                              "confidence": 0.8
                            }
                          },
                          {
                            "direction": "inbound",
                            "valid_from": "2021-05-05T04:30:00Z",
                            "valid_to": "2021-05-06T00:30:00Z",
                            "cost": {
                              "rate": 15.897,
                              "confidence": 1
                            },
                            "renewable": {
                              "share": 30,
                              "confidence": 0.7
                            },
                            "grid": {
                              "load": 4,
                              "confidence": 0.6
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              },
              "properties": {
                "object": {
                  "type": "string",
                  "description": "Represents the object’s type. i.e. `list`.",
                  "example": "list"
                },
                "url": {
                  "type": "string",
                  "description": "Represents the URL slug for the object.",
                  "example": "/events"
                },
                "has_more": {
                  "type": "boolean",
                  "description": "Is set to `true` if more objects are available."
                },
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Event"
                  }
                }
              }
            },
            "examples": {}
          }
        }
      },
      "CustomerList": {
        "description": "",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "x-examples": {
                "": {
                  "object": "list",
                  "url": "/customers",
                  "has_more": false,
                  "data": [
                    {
                      "live_mode": true,
                      "object": "customer",
                      "id": "cus_a83ec6da1e0d4917b9e9abf58d60574e",
                      "account_id": "acc_c85e9f90aa18454487b50d3c1785ed4e",
                      "reference_id": "ABC1234567890",
                      "time_created": "2021-05-05T05:37:27Z",
                      "personal_details": {
                        "email": "user@example.com",
                        "email_verified": true,
                        "phone": "440123456789",
                        "phone_verified": true,
                        "preferred_locale": "EN",
                        "timezone": "Etc/UTC"
                      },
                      "postal_address": {
                        "address_line1": "123",
                        "address_line2": "Infinite Drive",
                        "city": "London",
                        "state": "Greater London",
                        "post_code": "SE110AA",
                        "country_code": "GB"
                      },
                      "geo_location": {
                        "latitude": "-77.52907766250239",
                        "longitude": "167.1522246611749"
                      },
                      "legal": {
                        "terms_accepted": true,
                        "timestamp": "2021-05-05T05:37:27Z",
                        "ip": "8.8.8.8"
                      },
                      "providers": [
                        "prv_37ef12d765d0403e8745c29b29826d69"
                      ],
                      "locations": [
                        "loc_5de9bad5d97b49a1b7382f2c0cec9799",
                        "loc_b84526631dc54037940b75d3cb5971de"
                      ],
                      "devices": [
                        "dev_021ff68976894b73b62ec1d71cd6bb7b",
                        "dev_458dc1492183456696fa3e42ab246a1e",
                        "dev_fe23b2eeec81413bb305e676a7e63558"
                      ]
                    }
                  ]
                }
              },
              "properties": {
                "object": {
                  "type": "string",
                  "description": "Represents the object’s type. i.e. `list`.",
                  "example": "list"
                },
                "url": {
                  "type": "string",
                  "description": "Represents the URL slug for the object.",
                  "example": "/customers"
                },
                "has_more": {
                  "type": "boolean",
                  "description": "Is set to `true` if more objects are available."
                },
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Customer"
                  }
                }
              }
            }
          },
          "application/xml": {
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        }
      },
      "DeviceList": {
        "description": "",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "x-examples": {
                "": {
                  "object": "list",
                  "url": "/devices",
                  "has_more": false,
                  "data": []
                }
              },
              "properties": {
                "object": {
                  "type": "string",
                  "description": "Represents the object’s type. i.e. `list`.",
                  "example": "list"
                },
                "url": {
                  "type": "string",
                  "description": "Represents the URL slug for the object.",
                  "example": "/devices"
                },
                "has_more": {
                  "type": "boolean",
                  "description": "Is set to `true` if more objects are available."
                },
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Device"
                  }
                }
              }
            }
          }
        }
      },
      "Customer": {
        "description": "",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Customer"
            }
          }
        }
      },
      "Device": {
        "description": "",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Device"
            }
          }
        }
      },
      "AuthToken": {
        "description": "",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/AuthToken"
            }
          }
        }
      },
      "TariffRate": {
        "description": "",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/TariffRate"
            }
          }
        }
      },
      "ConnectToken": {
        "description": "Example response",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "x-examples": {
                "Example": {
                  "id": "cot_65e0839faca22517d5d51cd5",
                  "object": "connect_token",
                  "live_mode": true,
                  "time_created": "2023-05-05T18:37:27Z",
                  "customer_id": "cus_65e421d1daa4a24082b4f590",
                  "location_id": "loc_641b90b758fb8e6293716e40"
                }
              },
              "properties": {
                "id": {
                  "type": "string",
                  "description": "FlatPeak `connect_token` id. ",
                  "example": "cot_65e0839faca22517d5d51cd5"
                },
                "object": {
                  "type": "string",
                  "description": "FlatPeak object name, i.e. `connect_token`.",
                  "example": "connect_token"
                },
                "live_mode": {
                  "type": "boolean",
                  "example": true,
                  "description": "Set to `true` when object is in live mode."
                },
                "customer_id": {
                  "type": "string",
                  "description": "FlatPeak customer ID.",
                  "example": "cus_65e421d1daa4a24082b4f590"
                },
                "customer_reference_id": {
                  "type": "string",
                  "description": "An ID for the customer from your system.",
                  "example": "CUS0123456789",
                  "x-stoplight": {
                    "id": "5bozvul3sji1z"
                  }
                },
                "location_id": {
                  "type": "string",
                  "description": "FlatPeak location id.",
                  "example": "loc_641b90b758fb8e6293716e40"
                },
                "location_reference_id": {
                  "type": "string",
                  "description": "An identifier for a location from your system.",
                  "example": "LOC0123456789",
                  "x-stoplight": {
                    "id": "mo0q361hmxwp5"
                  }
                },
                "is_tariff_processed": {
                  "type": "boolean",
                  "x-stoplight": {
                    "id": "u6lxeqt9bh6r4"
                  },
                  "description": "Set to `true` when related tariff element has been processed and rates are available."
                },
                "complete_action": {
                  "type": "string",
                  "x-stoplight": {
                    "id": "el124hguta4ym"
                  },
                  "example": "SAVE",
                  "description": "Final page action when the session is completed. `SAVE` if the tariff element was connected, or `DISCONNECT` if the user disconnected it. May be empty for historic sessions."
                },
                "time_created": {
                  "type": "string",
                  "description": "Time when the object was created, in UTC.",
                  "example": "2023-05-05T18:37:27Z"
                },
                "time_expiry": {
                  "type": "string",
                  "x-stoplight": {
                    "id": "va4axmib7cwua"
                  },
                  "example": "2023-12-28T03:00:00Z",
                  "description": "Time when the token will expire. Expired tokens cannot be claimed."
                }
              },
              "required": [
                "id",
                "object",
                "live_mode",
                "location_id",
                "location_reference_id",
                "is_tariff_processed",
                "time_created",
                "time_expiry"
              ]
            }
          }
        }
      },
      "ConnectInitTariff": {
        "description": "Connect token object",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "x-examples": {
                "Example": {
                  "id": "cot_6587fa4362341be5b524de3b",
                  "object": "connect_session",
                  "data": {
                    "direction": "IMPORT",
                    "type": "COMMODITY",
                    "callback_uri": "https://webhook.site/4623e56fc5c1",
                    "connect_web_uri": "http://localhost:3000",
                    "customer_id": "cus_65e421d1daa4a24082b4f590",
                    "customer_reference": "CUS0123456789",
                    "location_id": "loc_641b90b758fb8e6293716e40",
                    "location_reference": "LOC0123456789",
                    "postal_address": {
                      "address_line1": "1-3",
                      "address_line2": "Strand",
                      "city": "London",
                      "state": "Greater London",
                      "post_code": "WC2N 5EH",
                      "country_code": "GB"
                    }
                  },
                  "time_created": "2023-05-05T18:37:27Z",
                  "time_expiry": "2023-05-05T19:37:27Z"
                }
              },
              "properties": {
                "connect_token": {
                  "type": "string",
                  "example": "cot_65df3e949a785c52283026ec",
                  "description": "The `connect_token`.",
                  "x-stoplight": {
                    "id": "zx1xgwn7g440w"
                  }
                },
                "expires_in": {
                  "type": "integer",
                  "description": "Expiration time in seconds.",
                  "example": 86400,
                  "x-stoplight": {
                    "id": "heui29te7p3km"
                  }
                },
                "live_mode": {
                  "type": "boolean",
                  "description": "Set to `true` if the object exists in live mode.",
                  "x-stoplight": {
                    "id": "pj6zzp8y0e6ir"
                  }
                }
              }
            }
          }
        }
      },
      "MeterRecords": {
        "description": "",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "x-examples": {
                "Example": {
                  "meter_events_accepted": 1732
                }
              },
              "properties": {
                "id": {
                  "type": "string",
                  "x-stoplight": {
                    "id": "hntltnlblf3pj"
                  },
                  "example": "bat_65e42b7827c0526548432b9f",
                  "description": "FlatPeak ID for this submission."
                },
                "object": {
                  "type": "string",
                  "x-stoplight": {
                    "id": "y85ovdjf47ve4"
                  },
                  "example": "meter_batch",
                  "description": "Object name, i.e. `meter_batch`."
                },
                "records_submitted": {
                  "type": "integer",
                  "x-stoplight": {
                    "id": "xhemd7v86wwqe"
                  },
                  "description": "Number of received metering records.",
                  "example": 18379
                },
                "records_accepted": {
                  "type": "integer",
                  "x-stoplight": {
                    "id": "yo3qq0mxlg1x1"
                  },
                  "description": "Number of accepted metering records.",
                  "example": 18378
                },
                "records_processed": {
                  "type": "integer",
                  "x-stoplight": {
                    "id": "8z90t8ilt6fmm"
                  },
                  "description": "Number of processed metering records.",
                  "example": 32
                },
                "failed_records": {
                  "x-stoplight": {
                    "id": "fy48c5zw2sbok"
                  },
                  "type": "array",
                  "description": "Returns details of any meter records that failed processing",
                  "items": {
                    "$ref": "#/components/schemas/FailedMeterRecord"
                  }
                },
                "time_created": {
                  "type": "string",
                  "x-stoplight": {
                    "id": "ej7w537oearlg"
                  },
                  "example": "2023-11-07T05:31:56Z",
                  "description": "Time when this object was created. In UTC.",
                  "format": "date-time"
                },
                "account_id": {
                  "type": "string",
                  "x-stoplight": {
                    "id": "7wdddwif8ztmn"
                  },
                  "example": "acc_661677911f2197045e6cf1b1",
                  "description": "FlatPeak account ID."
                }
              }
            }
          }
        }
      },
      "MeterRecord": {
        "description": "Example response",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/MeterRecordResponse"
            }
          }
        }
      },
      "EnergyCost": {
        "description": "",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "x-stoplight": {
                    "id": "26vkjp6qhohy5"
                  },
                  "description": "FlatPeak unique object ID that represents this response.",
                  "example": "ecs_65ea3fb185c1541f247c251e"
                },
                "object": {
                  "type": "string",
                  "x-stoplight": {
                    "id": "ty2q444sm09zs"
                  },
                  "example": "energy_cost",
                  "description": "FlatPeak object type. I.e. `energy_cost`."
                },
                "object_id": {
                  "type": "string",
                  "x-stoplight": {
                    "id": "2h9kdo9v5v39f"
                  },
                  "example": "dev_65e6d8334c8d715963d99db3",
                  "description": "FlatPeak object `location_id` or `device_id` cost data is for."
                },
                "live_mode": {
                  "type": "boolean",
                  "x-stoplight": {
                    "id": "ma9j1e5ry2yf4"
                  },
                  "description": "Has the value `true` if the object exists in live mode or the value false if the object exists in test mode.\n\n"
                },
                "direction": {
                  "type": "string",
                  "x-stoplight": {
                    "id": "42lo1ltimsmdv"
                  },
                  "example": "IMPORT",
                  "description": "Indicates energy direction. Supported values are `IMPORT` and `EXPORT`."
                },
                "location_timezone": {
                  "type": "string",
                  "x-stoplight": {
                    "id": "vu3ge08t7qjt7"
                  },
                  "example": "Europe/London",
                  "description": "The timezone at the location, in 'tz database format'. I.e. 'Europe/Berlin'."
                },
                "currency_code": {
                  "type": "string",
                  "x-stoplight": {
                    "id": "y3njbkb3jnfrr"
                  },
                  "example": "EUR",
                  "description": "Currency code for cost of energy measure. Always returned in *large* currency units."
                },
                "energy_units": {
                  "type": "string",
                  "x-stoplight": {
                    "id": "x1uoee265qowq"
                  },
                  "example": "WH",
                  "description": "Units of energy measure."
                },
                "carbon_units": {
                  "type": "string",
                  "x-stoplight": {
                    "id": "1egudxesmd7jb"
                  },
                  "example": "gCO2eq",
                  "description": "Units of carbon emissions measure."
                },
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EnergyCostResponse"
                  }
                },
                "account_id": {
                  "type": "string",
                  "x-stoplight": {
                    "id": "4pz309zkoly18"
                  },
                  "example": "acc_661677911f2197045e6cf1b1",
                  "description": "FlatPeak account id."
                }
              },
              "required": [
                "account_id"
              ]
            },
            "examples": {}
          }
        }
      },
      "Schedule": {
        "description": "",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Schedule"
            }
          }
        }
      },
      "TariffRateAudit": {
        "description": "",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/TariffRateAudit"
            }
          }
        }
      },
      "LocationNew": {
        "description": "Example response",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/LocationNew"
            }
          }
        }
      },
      "TariffElement": {
        "description": "Example response",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/TariffElementNew"
            }
          }
        }
      },
      "TariffElementsList": {
        "description": "Example response",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "x-examples": {
                "Example": {
                  "object": "list",
                  "url": "/events",
                  "has_more": true
                }
              },
              "properties": {
                "object": {
                  "type": "string",
                  "description": "Represents the object’s type. i.e. `list`.",
                  "example": "list"
                },
                "url": {
                  "type": "string",
                  "description": "Represents the URL slug for the object.",
                  "example": "/tariffs"
                },
                "has_more": {
                  "type": "boolean",
                  "description": "Is set to `true` if more objects are available.",
                  "default": false
                },
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TariffElementNew"
                  }
                }
              },
              "required": [
                "object",
                "url",
                "has_more"
              ]
            },
            "examples": {}
          }
        }
      },
      "LocationNewList": {
        "description": "Example response",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "object": {
                  "type": "string",
                  "x-stoplight": {
                    "id": "bg1p9v02lpgo7"
                  },
                  "description": "Represents the object’s type. i.e. `list`.",
                  "example": "list"
                },
                "url": {
                  "type": "string",
                  "x-stoplight": {
                    "id": "m91a6y1hctjkr"
                  },
                  "description": "Represents the URL slug for the object.",
                  "example": "/locations"
                },
                "has_more": {
                  "type": "boolean",
                  "x-stoplight": {
                    "id": "zn0jxuw4gplgr"
                  },
                  "description": "Is set to `true` if more objects are available."
                },
                "data": {
                  "type": "array",
                  "x-stoplight": {
                    "id": "bitma8en99j8b"
                  },
                  "items": {
                    "$ref": "#/components/schemas/LocationNew"
                  }
                }
              },
              "required": [
                "object",
                "url",
                "has_more",
                "data"
              ]
            }
          }
        }
      },
      "SlotTime": {
        "description": "Example response",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/SlotTime"
            }
          }
        }
      },
      "SlotThreshold": {
        "description": "Example response",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/SlotThreshold"
            }
          }
        }
      },
      "LocationStatus": {
        "description": "Example response",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/LocationStatus"
            }
          }
        }
      }
    },
    "examples": {},
    "requestBodies": {
      "CustomerCreate": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "reference_id": {
                  "type": "string",
                  "description": "A reference that is meaningful to you, for example, an ID from your system.",
                  "example": "CUS1234567890"
                }
              }
            }
          },
          "application/xml": {
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        "description": "Create a customer"
      },
      "DeviceCreate": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "reference_id": {
                  "type": "string",
                  "description": "A reference that is meaningful to you, for example, an ID from your system.",
                  "example": "DEV1234567890"
                }
              }
            }
          }
        },
        "description": "Creates a device"
      },
      "DeviceUpdate": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "reference_id": {
                  "type": "string",
                  "description": "A reference that is meaningful to you, for example, an ID from your system.",
                  "example": "DEV1234567890"
                }
              }
            }
          }
        },
        "description": "Updates a Device"
      },
      "CustomerUpdate": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "x-examples": {
                "": {
                  "reference_id": "ABC1234567890",
                  "personal_details": {
                    "email": "user@example.com",
                    "email_verified": true,
                    "phone": "440123456789",
                    "phone_verified": true,
                    "preferred_locale": "EN",
                    "timezone": "Etc/UTC"
                  },
                  "postal_address": {
                    "address_line1": "123",
                    "address_line2": "Infinite Drive",
                    "city": "London",
                    "state": "Greater London",
                    "post_code": "SE110AA",
                    "country_code": "GB"
                  },
                  "geo_location": {
                    "latitude": "-77.52907766250239",
                    "longitude": "167.1522246611749"
                  },
                  "terms_accepted": {
                    "terms_accepted": true,
                    "terms_accepted_time": "string"
                  },
                  "providers": [
                    "prv_37ef12d765d0403e8745c29b29826d69"
                  ],
                  "locations": [
                    "loc_5de9bad5d97b49a1b7382f2c0cec9799",
                    "loc_b84526631dc54037940b75d3cb5971de"
                  ],
                  "devices": [
                    "dev_021ff68976894b73b62ec1d71cd6bb7b",
                    "dev_458dc1492183456696fa3e42ab246a1e",
                    "dev_fe23b2eeec81413bb305e676a7e63558"
                  ]
                }
              },
              "properties": {
                "reference_id": {
                  "type": "string",
                  "description": "A reference that is meaningful to you, for example, an ID from your system.",
                  "example": "CUS1234567890"
                }
              }
            }
          }
        },
        "description": "Update a customer"
      },
      "ConnectInitTariff": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ConnectInitTariff"
            },
            "examples": {}
          }
        }
      },
      "MeterRecordSubmit": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/MeterRecordSubmit"
            }
          }
        }
      },
      "MeterRecordsSubmit": {
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/MeterRecordSubmit"
              }
            }
          }
        }
      },
      "EnergyCostByTime": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "start_time": {
                  "type": "string",
                  "x-stoplight": {
                    "id": "si73r5nblnmau"
                  },
                  "description": "Period start time. In RFC3339 format e.g. `2023-06-15T09:00:00Z` or with time-offset, e.g. `2023-06-15T08:00:00+01:00`.",
                  "format": "date-time",
                  "example": "2023-11-07T05:31:56Z"
                },
                "end_time": {
                  "type": "string",
                  "x-stoplight": {
                    "id": "nxeovd3sbco24"
                  },
                  "description": "Period end time. In RFC3339 format e.g. `2023-06-15T09:00:00Z` or with time-offset, e.g. `2023-06-15T08:00:00+01:00`.",
                  "format": "date-time",
                  "example": "2023-12-07T05:31:56Z"
                }
              }
            }
          }
        }
      },
      "ScheduleCreate": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "location_id": {
                  "type": "string",
                  "x-stoplight": {
                    "id": "yv0f1i184k6wm"
                  },
                  "description": "FlatPeak locaiton ID for which you want to generate the schedule.",
                  "example": "loc_641b90b758fb8e6293716e40"
                },
                "max_power": {
                  "type": "object",
                  "x-stoplight": {
                    "id": "y3pbpnfhj3jsh"
                  },
                  "description": "Maximum speed of power transfer for that location.",
                  "required": [
                    "units",
                    "value"
                  ],
                  "properties": {
                    "units": {
                      "type": "string",
                      "x-stoplight": {
                        "id": "hsmyjb54l587w"
                      },
                      "description": "Units of measure of power transfer. Supported value is `W` and `KW.`",
                      "example": "W"
                    },
                    "value": {
                      "type": "string",
                      "x-stoplight": {
                        "id": "njaeburreq4f4"
                      },
                      "description": "Speed power transfer is power.units.",
                      "example": "14000"
                    }
                  }
                },
                "shaving_threshold": {
                  "type": "object",
                  "x-stoplight": {
                    "id": "qn8dwomlprei4"
                  },
                  "description": "Tariff cap. Specifies up to what price you are willing to pay to buy (or, in reverse, sell) energy.",
                  "properties": {
                    "relative": {
                      "type": "number",
                      "x-stoplight": {
                        "id": "e60ay0bm8ui6x"
                      },
                      "example": 0.83,
                      "description": "Relative tariff cap. Where the highest tariff over the requested period is 1 and the lowest is 0.01, provide the value up to which you are willing to buy energy."
                    },
                    "absolute": {
                      "type": "number",
                      "x-stoplight": {
                        "id": "avmrm8hdz5z4w"
                      },
                      "example": 0.123,
                      "description": "Absolute tariff cap in local currency. Overrides `relative` value if provided."
                    }
                  }
                },
                "data": {
                  "type": "array",
                  "x-stoplight": {
                    "id": "szqweosyctojp"
                  },
                  "description": "This object that contains device schedule requests.",
                  "items": {
                    "type": "object",
                    "x-stoplight": {
                      "id": "7vj4cdqnpnw9w"
                    },
                    "properties": {
                      "device_id": {
                        "type": "string",
                        "example": "dev_65e6d8334c8d715963d99db3",
                        "description": "FlatPeak device ID."
                      },
                      "direction": {
                        "type": "string",
                        "description": "Indicates direction you want to work with. Set to `IMPORT` or `EXPORT`. Defaults to `IMPORT`.",
                        "example": "IMPORT"
                      },
                      "start_time": {
                        "type": "string",
                        "description": "Time when transfer of energy may begin. In RFC3339 format e.g. `2023-06-15T09:00:00Z` or with time-offset, e.g. `2023-06-15T08:00:00+01:00`.",
                        "example": "2022-02-01T20:14:00Z",
                        "format": "date-time"
                      },
                      "end_time": {
                        "type": "string",
                        "description": "Time when transfer of energy must be completed. In RFC3339 format e.g. `2023-06-15T11:00:00Z` or with time-offset, e.g. `2023-06-15T10:00:00+01:00`.",
                        "example": "2022-02-02T06:00:00Z",
                        "format": "date-time"
                      },
                      "max_power": {
                        "type": "object",
                        "description": "Requested speed of power transfer.",
                        "x-stoplight": {
                          "id": "46lqduh7dq5pz"
                        },
                        "properties": {
                          "units": {
                            "type": "string",
                            "description": "Units of measure of power transfer. Supported values are `W` and `KW`.",
                            "example": "W"
                          },
                          "value": {
                            "type": "number",
                            "description": "Speed power transfer is power.units.",
                            "example": 7000
                          }
                        }
                      },
                      "energy": {
                        "type": "object",
                        "description": "Energy requirement envelope.",
                        "required": [
                          "units",
                          "value"
                        ],
                        "properties": {
                          "units": {
                            "type": "string",
                            "description": "Units of measure, supported values are `WH`, `KWH`.",
                            "example": "WH"
                          },
                          "value": {
                            "type": "number",
                            "description": "Amount of energy required.",
                            "example": 24500,
                            "x-stoplight": {
                              "id": "6giwzzw08m8a8"
                            }
                          }
                        }
                      }
                    },
                    "required": [
                      "device_id",
                      "direction",
                      "end_time",
                      "energy"
                    ]
                  }
                }
              },
              "required": [
                "location_id",
                "max_power"
              ]
            }
          }
        }
      },
      "MeterRecordsCumulativeSubmit": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/MeterRecordCumulativeSubmit"
            },
            "examples": {}
          }
        }
      },
      "ConnectImport": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ConnectImport"
            }
          }
        }
      },
      "LocationCreateNew": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/LocationEditNew"
            }
          }
        }
      },
      "LocationUpdateNew": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/LocationEditNew"
            }
          }
        }
      },
      "TariffElementCreateNew": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/TariffElementCreateNew"
            },
            "examples": {}
          }
        }
      },
      "TariffElementUpdateNew": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/TariffElementUpdateNew"
            }
          }
        }
      }
    }
  }
}
